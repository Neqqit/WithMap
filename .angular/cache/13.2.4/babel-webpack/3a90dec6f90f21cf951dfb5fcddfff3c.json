{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewChild, Input, Output, Directive, ContentChildren, NgModule } from '@angular/core';\nimport { __rest } from 'tslib';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { from, fromEvent, throwError, merge, BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, filter } from 'rxjs/operators';\nconst _c0 = [\"container\"];\nconst _c1 = [\"*\"];\n\"use strict\";\n/**\n * Injection token to specify configuration.\n */\n\n\nconst YA_CONFIG = new InjectionToken('YA_CONFIG');\n/**\n * The `YaApiLoader` service handles loading of Yandex.Maps API.\n *\n * @example\n * ```ts\n * import { YaApiLoaderService } from 'angular8-yandex-maps';\n *\n * export class AppComponent {\n *   constructor(private yaApiLoaderService: YaApiLoaderService) {\n *     this.yaApiLoaderService.load()\n *       .subscribe(v => console.log(v))\n *   }\n * }\n *```\n *\n * @dynamic\n */\n\nclass YaApiLoaderService {\n  constructor(config, _document) {\n    this._document = _document;\n    this._defaultConfig = {\n      lang: 'ru_RU'\n    };\n    this._config = Object.assign(Object.assign({}, this._defaultConfig), config);\n  }\n  /**\n   * Loads Yandex.Maps API.\n   */\n\n\n  load() {\n    if (window.ymaps) {\n      return from(ymaps.ready()).pipe(map(() => ymaps));\n    }\n\n    if (!this._script) {\n      const script = this._document.createElement('script');\n\n      script.type = 'text/javascript';\n      script.src = this._getScriptSource(this._config);\n      script.id = 'yandexMapsApiScript';\n      script.async = true;\n      script.defer = true;\n      this._script = this._document.body.appendChild(script);\n    }\n\n    const load = fromEvent(this._script, 'load').pipe(switchMap(() => from(ymaps.ready()).pipe(map(() => ymaps))));\n    const error = fromEvent(this._script, 'error').pipe(switchMap(e => throwError(e)));\n    return merge(load, error).pipe(take(1));\n  }\n  /**\n   * Returns script source by config.\n   * @param config config with parameters that will be added in source\n   * @example\n   * // returns 'https://api-maps.yandex.ru/2.1/?apikey=658f67a2-fd77-42e9-b99e-2bd48c4ccad4&lang=en_US'\n   * getScriptSource({ apikey: '658f67a2-fd77-42e9-b99e-2bd48c4ccad4', lang: 'en_US' })\n   */\n\n\n  _getScriptSource(config) {\n    const {\n      enterprise,\n      version = '2.1'\n    } = config,\n          rest = __rest(config, [\"enterprise\", \"version\"]);\n\n    const params = this._convertConfigIntoQueryParams(rest);\n\n    return `https://${enterprise ? 'enterprise.' : ''}api-maps.yandex.ru/${version}/?${params}`;\n  }\n  /**\n   * Converts a config into a query string parameters.\n   * @param config object for converting\n   * @example\n   * // returns \"lang=ru_RU&apikey=XXX\"\n   * convertIntoQueryParams({ lang: 'ru_RU', apikey: 'XXX' })\n   */\n\n\n  _convertConfigIntoQueryParams(config) {\n    return Object.entries(config).map(([key, value]) => `${key}=${value}`).join('&');\n  }\n\n}\n\nYaApiLoaderService.ɵfac = function YaApiLoaderService_Factory(t) {\n  return new (t || YaApiLoaderService)(i0.ɵɵinject(YA_CONFIG, 8), i0.ɵɵinject(DOCUMENT));\n};\n\nYaApiLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: YaApiLoaderService,\n  factory: YaApiLoaderService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaApiLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [YA_CONFIG]\n      }]\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Copied from angular/components/google-maps and edited for Yandex.Maps API.\n * {@link https://github.com/angular/components/blob/master/src/google-maps/map-event-manager.ts}\n */\n\n/**\n * Manages event on a Yandex.Maps object, ensuring that events are added only when necessary.\n * @internal\n */\n\n\nclass EventManager {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    /**\n     * Listeners that were added before the target was set.\n     */\n\n    this._pending = [];\n    this._listeners = [];\n    this._targetStream = new BehaviorSubject(undefined);\n  }\n  /**\n   * Gets an observable that adds an event listener to the map when a consumer subscribes to it.\n   * @param name\n   */\n\n\n  getLazyEmitter(name) {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({\n            observable,\n            observer\n          });\n\n          return undefined;\n        }\n\n        const callback = event => {\n          const e = {\n            event,\n            target,\n            ymaps\n          };\n\n          this._ngZone.run(() => observer.next(e));\n        };\n\n        const listener = target.events.add(name, callback);\n\n        this._listeners.push({\n          name,\n          callback,\n          manager: listener\n        }); // Unsubscribe function\n\n\n        return () => listener.remove(name, callback);\n      });\n      return observable;\n    }));\n  }\n  /**\n   * Sets the current target that the manager should bind events to.\n   * @param target\n   */\n\n\n  setTarget(target) {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    } // Clear the listeners from the pre-existing target.\n\n\n    if (currentTarget) {\n      this._clearListeners();\n\n      this._pending = [];\n    }\n\n    this._targetStream.next(target); // Add the listeners that were bound before the map was initialized.\n\n\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n\n    this._pending = [];\n  }\n  /**\n   * Destroys the manager and clears the event listeners.\n   */\n\n\n  destroy() {\n    this._clearListeners();\n\n    this._pending = [];\n\n    this._targetStream.complete();\n  }\n  /**\n   * Clears all currently-registered event listeners.\n   */\n\n\n  _clearListeners() {\n    this._listeners.forEach(listener => {\n      const {\n        name,\n        callback,\n        manager\n      } = listener;\n      manager.remove(name, callback);\n    });\n\n    this._listeners = [];\n  }\n\n}\n/**\n * Generates a random string based on Date in hexadecimal numeral system\n * @example f175517fa4f3\n * @internal\n */\n\n\nconst generateRandomId = () => `f${Number(new Date()).toString(16)}`;\n/**\n * The `ya-map` component wraps `ymaps.Map` class from the Yandex.Maps API.\n * You can configure the map via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/map-onload-event?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map\n *   [center]=\"[55.751952, 37.600739]\"\n *   [state]=\"{type: 'yandex#satellite'}\"\n * ></ya-map>\n * ```\n */\n\n\nclass YaMapComponent {\n  constructor(_ngZone, _yaApiLoaderService,\n  /*\n   * We need to use the same type like in an Angular.\n   * \"export declare const PLATFORM_ID: InjectionToken<Object>\"\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId) {\n    this._ngZone = _ngZone;\n    this._yaApiLoaderService = _yaApiLoaderService;\n    this._sub = new Subscription();\n    this._eventManager = new EventManager(this._ngZone);\n    this.map$ = new BehaviorSubject(undefined);\n    /**\n     * Map instance is created.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * The start of a new smooth map movement.\n     */\n\n    this.actionbegin = this._eventManager.getLazyEmitter('actionbegin');\n    /**\n     * Event that occurs when an action step was prematurely stopped.\n     */\n\n    this.actionbreak = this._eventManager.getLazyEmitter('actionbreak');\n    /**\n     * The end of smooth map movement.\n     */\n\n    this.actionend = this._eventManager.getLazyEmitter('actionend');\n    /**\n     * The start of a new step of smooth movement.\n     */\n\n    this.actiontick = this._eventManager.getLazyEmitter('actiontick');\n    /**\n     * The end of performing a step of smooth movement.\n     */\n\n    this.actiontickcomplete = this._eventManager.getLazyEmitter('actiontickcomplete');\n    /**\n     * Closing the balloon.\n     */\n\n    this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n    /**\n     * Opening a balloon on a map.\n     */\n\n    this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n    /**\n     * Event for a change to the map viewport.\n     */\n\n    this.boundschange = this._eventManager.getLazyEmitter('boundschange');\n    /**\n     * Single left-click on the object.\n     */\n\n    this.yaclick = this._eventManager.getLazyEmitter('click');\n    /**\n     * Calls the element's context menu.\n     */\n\n    this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n    /**\n     * Double left-click on the object.\n     */\n\n    this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * The map was destroyed.\n     */\n\n    this.destroy = this._eventManager.getLazyEmitter('destroy');\n    /**\n     * Closing the hint.\n     */\n\n    this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n    /**\n     * Opening a hint on a map.\n     */\n\n    this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n    /**\n     * Map margins changed.\n     */\n\n    this.marginchange = this._eventManager.getLazyEmitter('marginchange');\n    /**\n     * Pressing the mouse button over the object.\n     */\n\n    this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * Pointing the cursor at the object.\n     */\n\n    this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n    /**\n     * Moving the cursor off of the object.\n     */\n\n    this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n    /**\n     * Moving the cursor over the object.\n     */\n\n    this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * Letting go of the mouse button over an object.\n     */\n\n    this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * End of multitouch.\n     */\n\n    this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n    /**\n     * Repeating event during multitouch.\n     */\n\n    this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n    /**\n     * Start of multitouch.\n     */\n\n    this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n    /**\n     * Map options changed.\n     */\n\n    this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n    /**\n     * Map size changed.\n     */\n\n    this.sizechange = this._eventManager.getLazyEmitter('sizechange');\n    /**\n     * The map type changed.\n     */\n\n    this.typechange = this._eventManager.getLazyEmitter('typechange');\n    /**\n     * Mouse wheel scrolling.\n     */\n\n    this.yawheel = this._eventManager.getLazyEmitter('wheel');\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n\n\n  ngOnChanges(changes) {\n    const map = this.map$.value;\n\n    if (map) {\n      const {\n        center,\n        zoom,\n        state,\n        options\n      } = changes;\n\n      if (state) {\n        this._setState(this._combineState(), map);\n      }\n\n      if (center) {\n        map.setCenter(center.currentValue);\n      }\n\n      if (zoom) {\n        map.setZoom(zoom.currentValue);\n      }\n\n      if (options) {\n        map.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    /**\n     * It should be a noop during server-side rendering.\n     */\n    if (this.isBrowser) {\n      const sub = this._yaApiLoaderService.load().subscribe(() => {\n        const id = generateRandomId();\n\n        const map = this._createMap(id);\n\n        this.map$.next(map);\n\n        this._eventManager.setTarget(map);\n\n        this._ngZone.run(() => this.ready.emit({\n          ymaps,\n          target: map\n        }));\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._sub.unsubscribe();\n  }\n  /**\n   * Destructs state and passes it in API.\n   * @param state\n   * @param map\n   */\n\n\n  _setState(state, map) {\n    const {\n      behaviors,\n      bounds,\n      center,\n      controls,\n      margin,\n      type,\n      zoom\n    } = state;\n\n    if (behaviors) {\n      map.behaviors.enable(behaviors);\n    }\n\n    if (bounds) {\n      map.setBounds(bounds);\n    }\n\n    if (center) {\n      map.setCenter(center);\n    }\n\n    if (controls) {\n      controls.forEach(control => map.controls.add(control));\n    }\n\n    if (margin) {\n      map.margin.setDefaultMargin(margin);\n    }\n\n    if (type) {\n      map.setType(type);\n    }\n\n    if (zoom) {\n      map.setZoom(zoom);\n    }\n  }\n  /**\n   * Creates a map.\n   * @param id ID which will be set to the map container.\n   */\n\n\n  _createMap(id) {\n    const containerElem = this.container.nativeElement;\n    containerElem.setAttribute('id', id);\n    containerElem.style.cssText = 'width: 100%; height: 100%;';\n    return new ymaps.Map(id, this._combineState(), this.options || {});\n  }\n  /**\n   * Combines the center and zoom into single object.\n   */\n\n\n  _combineState() {\n    var _a, _b;\n\n    const state = this.state || {};\n    return Object.assign(Object.assign({}, state), {\n      center: this.center || state.center || [0, 0],\n      zoom: (_b = (_a = this.zoom) !== null && _a !== void 0 ? _a : state.zoom) !== null && _b !== void 0 ? _b : 10\n    });\n  }\n\n}\n\nYaMapComponent.ɵfac = function YaMapComponent_Factory(t) {\n  return new (t || YaMapComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(YaApiLoaderService), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nYaMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YaMapComponent,\n  selectors: [[\"ya-map\"]],\n  viewQuery: function YaMapComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n    }\n  },\n  inputs: {\n    center: \"center\",\n    zoom: \"zoom\",\n    state: \"state\",\n    options: \"options\"\n  },\n  outputs: {\n    ready: \"ready\",\n    actionbegin: \"actionbegin\",\n    actionbreak: \"actionbreak\",\n    actionend: \"actionend\",\n    actiontick: \"actiontick\",\n    actiontickcomplete: \"actiontickcomplete\",\n    balloonclose: \"balloonclose\",\n    balloonopen: \"balloonopen\",\n    boundschange: \"boundschange\",\n    yaclick: \"yaclick\",\n    yacontextmenu: \"yacontextmenu\",\n    yadblclick: \"yadblclick\",\n    destroy: \"destroy\",\n    hintclose: \"hintclose\",\n    hintopen: \"hintopen\",\n    marginchange: \"marginchange\",\n    yamousedown: \"yamousedown\",\n    yamouseenter: \"yamouseenter\",\n    yamouseleave: \"yamouseleave\",\n    yamousemove: \"yamousemove\",\n    yamouseup: \"yamouseup\",\n    multitouchend: \"multitouchend\",\n    multitouchmove: \"multitouchmove\",\n    multitouchstart: \"multitouchstart\",\n    optionschange: \"optionschange\",\n    sizechange: \"sizechange\",\n    typechange: \"typechange\",\n    yawheel: \"yawheel\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"container\", \"\"]],\n  template: function YaMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ya-map',\n      template: '<div #container></div>',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaApiLoaderService\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    container: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    center: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    actionbegin: [{\n      type: Output\n    }],\n    actionbreak: [{\n      type: Output\n    }],\n    actionend: [{\n      type: Output\n    }],\n    actiontick: [{\n      type: Output\n    }],\n    actiontickcomplete: [{\n      type: Output\n    }],\n    balloonclose: [{\n      type: Output\n    }],\n    balloonopen: [{\n      type: Output\n    }],\n    boundschange: [{\n      type: Output\n    }],\n    yaclick: [{\n      type: Output\n    }],\n    yacontextmenu: [{\n      type: Output\n    }],\n    yadblclick: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    hintclose: [{\n      type: Output\n    }],\n    hintopen: [{\n      type: Output\n    }],\n    marginchange: [{\n      type: Output\n    }],\n    yamousedown: [{\n      type: Output\n    }],\n    yamouseenter: [{\n      type: Output\n    }],\n    yamouseleave: [{\n      type: Output\n    }],\n    yamousemove: [{\n      type: Output\n    }],\n    yamouseup: [{\n      type: Output\n    }],\n    multitouchend: [{\n      type: Output\n    }],\n    multitouchmove: [{\n      type: Output\n    }],\n    multitouchstart: [{\n      type: Output\n    }],\n    optionschange: [{\n      type: Output\n    }],\n    sizechange: [{\n      type: Output\n    }],\n    typechange: [{\n      type: Output\n    }],\n    yawheel: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * The `ya-geoobject` component wraps `ymaps.GeoObject` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/geoobject-polygon?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-geoobject\n *     [feature]=\"{ geometry: { type: 'Rectangle', coordinates: [[55.665, 37.66], [55.64,37.53]] } }\"\n *   ></ya-geoobject>\n * </ya-map>\n * ```\n */\n\n\nclass YaGeoObjectDirective {\n  constructor(_ngZone, _yaMapComponent) {\n    this._ngZone = _ngZone;\n    this._yaMapComponent = _yaMapComponent;\n    this._sub = new Subscription();\n    this._eventManager = new EventManager(this._ngZone);\n    /**\n     * GeoObject instance is added in a Map.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * Closing the balloon.\n     */\n\n    this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n    /**\n     * Opening a balloon on a map.\n     */\n\n    this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n    /**\n     * Event preceding the \"drag\" event.\n     */\n\n    this.beforedrag = this._eventManager.getLazyEmitter('beforedrag');\n    /**\n     * Event preceding the \"dragstart\" event.\n     */\n\n    this.beforedragstart = this._eventManager.getLazyEmitter('beforedragstart');\n    /**\n     * Single left-click on the object.\n     */\n\n    this.yaclick = this._eventManager.getLazyEmitter('click');\n    /**\n     * Calls the element's context menu.\n     */\n\n    this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n    /**\n     * Double left-click on the object.\n     */\n\n    this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * Dragging a geo object.\n     */\n\n    this.yadrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * End of geo object dragging.\n     */\n\n    this.yadragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * Start of geo object dragging.\n     */\n\n    this.yadragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * Change in the state of the editor for the geo object's geometry.\n     */\n\n    this.editorstatechange = this._eventManager.getLazyEmitter('editorstatechange');\n    /**\n     * Change to the geo object geometry\n     */\n\n    this.geometrychange = this._eventManager.getLazyEmitter('geometrychange');\n    /**\n     * Closing the hint.\n     */\n\n    this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n    /**\n     * Opening a hint on a map.\n     */\n\n    this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n    /**\n     * Map reference changed.\n     */\n\n    this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n    /**\n     * Pressing the mouse button over the object.\n     */\n\n    this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * Pointing the cursor at the object.\n     */\n\n    this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n    /**\n     * Moving the cursor off of the object.\n     */\n\n    this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n    /**\n     * Moving the cursor over the object.\n     */\n\n    this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * Letting go of the mouse button over an object.\n     */\n\n    this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * End of multitouch.\n     */\n\n    this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n    /**\n     * Repeating event during multitouch.\n     */\n\n    this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n    /**\n     * Start of multitouch.\n     */\n\n    this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n    /**\n     * Change to the object options.\n     */\n\n    this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n    /**\n     * Change to the geo object overlay.\n     */\n\n    this.overlaychange = this._eventManager.getLazyEmitter('overlaychange');\n    /**\n     * The parent object reference changed.\n     */\n\n    this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n    /**\n     * Change to the geo object data.\n     */\n\n    this.propertieschange = this._eventManager.getLazyEmitter('propertieschange');\n    /**\n     * Mouse wheel scrolling.\n     */\n\n    this.yawheel = this._eventManager.getLazyEmitter('wheel');\n  }\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n\n\n  ngOnChanges(changes) {\n    const {\n      geoObject\n    } = this;\n\n    if (geoObject) {\n      const {\n        feature,\n        options\n      } = changes;\n\n      if (feature) {\n        this._setFeature(feature.currentValue, geoObject);\n      }\n\n      if (options) {\n        geoObject.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe(map => {\n        if (map) {\n          const geoObject = this._createGeoObject();\n\n          this.geoObject = geoObject;\n          map.geoObjects.add(geoObject);\n\n          this._eventManager.setTarget(geoObject);\n\n          this._ngZone.run(() => this.ready.emit({\n            ymaps,\n            target: geoObject\n          }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy() {\n    var _a, _b;\n\n    if (this.geoObject) {\n      (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this.geoObject);\n\n      this._eventManager.destroy();\n    }\n\n    this._sub.unsubscribe();\n  }\n  /**\n   * Destructs feature and passes it in API.\n   * @param feature\n   * @param geoObject\n   */\n\n\n  _setFeature(feature, geoObject) {\n    const {\n      geometry,\n      properties\n    } = feature;\n\n    if (geometry) {\n      console.warn('The geometry can not be changed after entity init. To set it, you should recreate a GeoObject with new feature.geometry');\n    }\n\n    if (properties) {\n      geoObject.properties.set(properties);\n    }\n  }\n  /**\n   * Creates GeoObject.\n   */\n\n\n  _createGeoObject() {\n    return new ymaps.GeoObject(this.feature, this.options);\n  }\n\n}\n\nYaGeoObjectDirective.ɵfac = function YaGeoObjectDirective_Factory(t) {\n  return new (t || YaGeoObjectDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(YaMapComponent));\n};\n\nYaGeoObjectDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: YaGeoObjectDirective,\n  selectors: [[\"ya-geoobject\"]],\n  inputs: {\n    feature: \"feature\",\n    options: \"options\"\n  },\n  outputs: {\n    ready: \"ready\",\n    balloonclose: \"balloonclose\",\n    balloonopen: \"balloonopen\",\n    beforedrag: \"beforedrag\",\n    beforedragstart: \"beforedragstart\",\n    yaclick: \"yaclick\",\n    yacontextmenu: \"yacontextmenu\",\n    yadblclick: \"yadblclick\",\n    yadrag: \"yadrag\",\n    yadragend: \"yadragend\",\n    yadragstart: \"yadragstart\",\n    editorstatechange: \"editorstatechange\",\n    geometrychange: \"geometrychange\",\n    hintclose: \"hintclose\",\n    hintopen: \"hintopen\",\n    mapchange: \"mapchange\",\n    yamousedown: \"yamousedown\",\n    yamouseenter: \"yamouseenter\",\n    yamouseleave: \"yamouseleave\",\n    yamousemove: \"yamousemove\",\n    yamouseup: \"yamouseup\",\n    multitouchend: \"multitouchend\",\n    multitouchmove: \"multitouchmove\",\n    multitouchstart: \"multitouchstart\",\n    optionschange: \"optionschange\",\n    overlaychange: \"overlaychange\",\n    parentchange: \"parentchange\",\n    propertieschange: \"propertieschange\",\n    yawheel: \"yawheel\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaGeoObjectDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ya-geoobject'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaMapComponent\n    }];\n  }, {\n    feature: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    balloonclose: [{\n      type: Output\n    }],\n    balloonopen: [{\n      type: Output\n    }],\n    beforedrag: [{\n      type: Output\n    }],\n    beforedragstart: [{\n      type: Output\n    }],\n    yaclick: [{\n      type: Output\n    }],\n    yacontextmenu: [{\n      type: Output\n    }],\n    yadblclick: [{\n      type: Output\n    }],\n    yadrag: [{\n      type: Output\n    }],\n    yadragend: [{\n      type: Output\n    }],\n    yadragstart: [{\n      type: Output\n    }],\n    editorstatechange: [{\n      type: Output\n    }],\n    geometrychange: [{\n      type: Output\n    }],\n    hintclose: [{\n      type: Output\n    }],\n    hintopen: [{\n      type: Output\n    }],\n    mapchange: [{\n      type: Output\n    }],\n    yamousedown: [{\n      type: Output\n    }],\n    yamouseenter: [{\n      type: Output\n    }],\n    yamouseleave: [{\n      type: Output\n    }],\n    yamousemove: [{\n      type: Output\n    }],\n    yamouseup: [{\n      type: Output\n    }],\n    multitouchend: [{\n      type: Output\n    }],\n    multitouchmove: [{\n      type: Output\n    }],\n    multitouchstart: [{\n      type: Output\n    }],\n    optionschange: [{\n      type: Output\n    }],\n    overlaychange: [{\n      type: Output\n    }],\n    parentchange: [{\n      type: Output\n    }],\n    propertieschange: [{\n      type: Output\n    }],\n    yawheel: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * The `ya-placemark` directive wraps `ymaps.Placemark` class from the Yandex.Maps API.\n * You can configure it via the directive's inputs.\n * Events can be bound using the outputs of the directive.\n *\n * <example-url>https://stackblitz.com/edit/custom-placemark?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.751952, 37.600739]\">\n *   <ya-placemark [geometry]=\"[55.751952, 37.600739]\"></ya-placemark>\n * </ya-map>\n * ```\n */\n\n\nclass YaPlacemarkDirective {\n  constructor(_ngZone, _yaMapComponent) {\n    this._ngZone = _ngZone;\n    this._yaMapComponent = _yaMapComponent;\n    this._sub = new Subscription();\n    this._eventManager = new EventManager(this._ngZone);\n    /**\n     * Placemark instance is added in a Map.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * Closing the balloon.\n     */\n\n    this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n    /**\n     * Opening a balloon on a map.\n     */\n\n    this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n    /**\n     * Event preceding the \"drag\" event.\n     */\n\n    this.beforedrag = this._eventManager.getLazyEmitter('beforedrag');\n    /**\n     * Event preceding the \"dragstart\" event.\n     */\n\n    this.beforedragstart = this._eventManager.getLazyEmitter('beforedragstart');\n    /**\n     * Single left-click on the object.\n     */\n\n    this.yaclick = this._eventManager.getLazyEmitter('click');\n    /**\n     * Calls the element's context menu.\n     */\n\n    this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n    /**\n     * Double left-click on the object.\n     */\n\n    this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * Dragging a geo object.\n     */\n\n    this.yadrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * End of geo object dragging.\n     */\n\n    this.yadragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * Start of geo object dragging.\n     */\n\n    this.yadragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * Change in the state of the editor for the geo object's geometry.\n     */\n\n    this.editorstatechange = this._eventManager.getLazyEmitter('editorstatechange');\n    /**\n     * Change to the geo object geometry\n     */\n\n    this.geometrychange = this._eventManager.getLazyEmitter('geometrychange');\n    /**\n     * Closing the hint.\n     */\n\n    this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n    /**\n     * Opening a hint on a map.\n     */\n\n    this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n    /**\n     * Map reference changed.\n     */\n\n    this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n    /**\n     * Pressing the mouse button over the object.\n     */\n\n    this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * Pointing the cursor at the object.\n     */\n\n    this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n    /**\n     * Moving the cursor off of the object.\n     */\n\n    this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n    /**\n     * Moving the cursor over the object.\n     */\n\n    this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * Letting go of the mouse button over an object.\n     */\n\n    this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * End of multitouch.\n     */\n\n    this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n    /**\n     * Repeating event during multitouch.\n     */\n\n    this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n    /**\n     * Start of multitouch.\n     */\n\n    this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n    /**\n     * Change to the object options.\n     */\n\n    this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n    /**\n     * Change to the geo object overlay.\n     */\n\n    this.overlaychange = this._eventManager.getLazyEmitter('overlaychange');\n    /**\n     * The parent object reference changed.\n     */\n\n    this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n    /**\n     * Change to the geo object data.\n     */\n\n    this.propertieschange = this._eventManager.getLazyEmitter('propertieschange');\n    /**\n     * Mouse wheel scrolling.\n     */\n\n    this.yawheel = this._eventManager.getLazyEmitter('wheel');\n  }\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n\n\n  ngOnChanges(changes) {\n    var _a;\n\n    const {\n      placemark\n    } = this;\n\n    if (placemark) {\n      const {\n        geometry,\n        properties,\n        options\n      } = changes;\n\n      if (geometry) {\n        (_a = placemark.geometry) === null || _a === void 0 ? void 0 : _a.setCoordinates(geometry.currentValue);\n      }\n\n      if (properties) {\n        placemark.properties.set(properties.currentValue);\n      }\n\n      if (options) {\n        placemark.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe(map => {\n        if (map) {\n          const placemark = this._createPlacemark();\n\n          this.placemark = placemark;\n          map.geoObjects.add(placemark);\n\n          this._eventManager.setTarget(placemark);\n\n          this._ngZone.run(() => this.ready.emit({\n            ymaps,\n            target: placemark\n          }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy() {\n    var _a, _b;\n\n    if (this.placemark) {\n      (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this.placemark);\n\n      this._eventManager.destroy();\n    }\n\n    this._sub.unsubscribe();\n  }\n  /**\n   * Creates a placemark.\n   */\n\n\n  _createPlacemark() {\n    return new ymaps.Placemark(this.geometry, this.properties, this.options);\n  }\n\n}\n\nYaPlacemarkDirective.ɵfac = function YaPlacemarkDirective_Factory(t) {\n  return new (t || YaPlacemarkDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(YaMapComponent));\n};\n\nYaPlacemarkDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: YaPlacemarkDirective,\n  selectors: [[\"ya-placemark\"]],\n  inputs: {\n    geometry: \"geometry\",\n    properties: \"properties\",\n    options: \"options\"\n  },\n  outputs: {\n    ready: \"ready\",\n    balloonclose: \"balloonclose\",\n    balloonopen: \"balloonopen\",\n    beforedrag: \"beforedrag\",\n    beforedragstart: \"beforedragstart\",\n    yaclick: \"yaclick\",\n    yacontextmenu: \"yacontextmenu\",\n    yadblclick: \"yadblclick\",\n    yadrag: \"yadrag\",\n    yadragend: \"yadragend\",\n    yadragstart: \"yadragstart\",\n    editorstatechange: \"editorstatechange\",\n    geometrychange: \"geometrychange\",\n    hintclose: \"hintclose\",\n    hintopen: \"hintopen\",\n    mapchange: \"mapchange\",\n    yamousedown: \"yamousedown\",\n    yamouseenter: \"yamouseenter\",\n    yamouseleave: \"yamouseleave\",\n    yamousemove: \"yamousemove\",\n    yamouseup: \"yamouseup\",\n    multitouchend: \"multitouchend\",\n    multitouchmove: \"multitouchmove\",\n    multitouchstart: \"multitouchstart\",\n    optionschange: \"optionschange\",\n    overlaychange: \"overlaychange\",\n    parentchange: \"parentchange\",\n    propertieschange: \"propertieschange\",\n    yawheel: \"yawheel\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaPlacemarkDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ya-placemark'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaMapComponent\n    }];\n  }, {\n    geometry: [{\n      type: Input\n    }],\n    properties: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    balloonclose: [{\n      type: Output\n    }],\n    balloonopen: [{\n      type: Output\n    }],\n    beforedrag: [{\n      type: Output\n    }],\n    beforedragstart: [{\n      type: Output\n    }],\n    yaclick: [{\n      type: Output\n    }],\n    yacontextmenu: [{\n      type: Output\n    }],\n    yadblclick: [{\n      type: Output\n    }],\n    yadrag: [{\n      type: Output\n    }],\n    yadragend: [{\n      type: Output\n    }],\n    yadragstart: [{\n      type: Output\n    }],\n    editorstatechange: [{\n      type: Output\n    }],\n    geometrychange: [{\n      type: Output\n    }],\n    hintclose: [{\n      type: Output\n    }],\n    hintopen: [{\n      type: Output\n    }],\n    mapchange: [{\n      type: Output\n    }],\n    yamousedown: [{\n      type: Output\n    }],\n    yamouseenter: [{\n      type: Output\n    }],\n    yamouseleave: [{\n      type: Output\n    }],\n    yamousemove: [{\n      type: Output\n    }],\n    yamouseup: [{\n      type: Output\n    }],\n    multitouchend: [{\n      type: Output\n    }],\n    multitouchmove: [{\n      type: Output\n    }],\n    multitouchstart: [{\n      type: Output\n    }],\n    optionschange: [{\n      type: Output\n    }],\n    overlaychange: [{\n      type: Output\n    }],\n    parentchange: [{\n      type: Output\n    }],\n    propertieschange: [{\n      type: Output\n    }],\n    yawheel: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * The `ya-clusterer` component wraps `ymaps.Clusterer` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/placemark-clusterer?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-clusterer [options]=\"{ minClusterSize: 5 }\">\n *     <ya-placemark [geometry]=\"[55.74, 37.5]\"></ya-placemark>\n *     <ya-placemark [geometry]=\"[55.64, 37.46]\"></ya-placemark>\n *     <ya-placemark [geometry]=\"[55.75, 37.38]\"></ya-placemark>\n *\n *     <ya-geoobject\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.81, 37.4] } }\"\n *      ></ya-geoobject>\n *\n *     <ya-geoobject\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.7, 37.39] } }\"\n *      ></ya-geoobject>\n *   </ya-clusterer>\n * </ya-map>\n * ```\n */\n\n\nclass YaClustererComponent {\n  constructor(_ngZone, _yaMapComponent) {\n    this._ngZone = _ngZone;\n    this._yaMapComponent = _yaMapComponent;\n    this._sub = new Subscription();\n    this._eventManager = new EventManager(this._ngZone);\n    /**\n     * Clusterer instance is added in a Map.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * Closing the hint.\n     */\n\n    this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n    /**\n     * Opening a hint on a map.\n     */\n\n    this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n    /**\n     * Map reference changed.\n     */\n\n    this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n    /**\n     * Change to the object options.\n     */\n\n    this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n    /**\n     * The parent object reference changed.\n     */\n\n    this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n  }\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n\n\n  ngOnChanges(changes) {\n    const clusterer = this._clusterer;\n\n    if (clusterer) {\n      const {\n        options\n      } = changes;\n\n      if (options) {\n        clusterer.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe(map => {\n        if (map) {\n          const clusterer = this._createClusterer();\n\n          this._clusterer = clusterer;\n          map.geoObjects.add(clusterer);\n\n          this._eventManager.setTarget(clusterer);\n\n          this._watchForContentChanges(clusterer);\n\n          this._ngZone.run(() => this.ready.emit({\n            ymaps,\n            target: clusterer\n          }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._sub.unsubscribe();\n  }\n  /**\n   * Creates Clusterer.\n   */\n\n\n  _createClusterer() {\n    return new ymaps.Clusterer(this.options);\n  }\n\n  _watchForContentChanges(clusterer) {\n    /**\n     * Adds new Placemarks to the clusterer on changes.\n     */\n    const currentPlacemarks = new Set();\n\n    this._getInternalPlacemarks(this._placemarks.toArray()).forEach(placemark => {\n      currentPlacemarks.add(placemark);\n      clusterer.add(placemark);\n    });\n\n    const placemarksSub = this._placemarks.changes.subscribe(placemarkDirectives => {\n      const newPlacemarks = new Set(this._getInternalPlacemarks(placemarkDirectives));\n\n      const difference = this._getDifference(newPlacemarks, currentPlacemarks);\n\n      clusterer.add(difference.toAdd);\n      clusterer.remove(difference.toRemove);\n    });\n\n    this._sub.add(placemarksSub);\n    /**\n     * Adds new GeoObjects to the clusterer on changes.\n     */\n\n\n    const currentGeoObjects = new Set();\n\n    this._getInternalGeoObjects(this._geoObjects.toArray()).forEach(geoObject => {\n      currentGeoObjects.add(geoObject);\n      clusterer.add(geoObject);\n    });\n\n    const geoObjectsSub = this._geoObjects.changes.subscribe(geoObjectDirectives => {\n      const newGeoObjects = new Set(this._getInternalGeoObjects(geoObjectDirectives));\n\n      const difference = this._getDifference(newGeoObjects, currentGeoObjects);\n\n      clusterer.add(difference.toAdd);\n      clusterer.remove(difference.toRemove);\n    });\n\n    this._sub.add(geoObjectsSub);\n  }\n  /**\n   * Determines what should be added/removed in current set to equal new set\n   *\n   * @param newSet\n   * @param currentSet\n   */\n\n\n  _getDifference(newSet, currentSet) {\n    const toAdd = [];\n    const toRemove = [];\n    newSet.forEach(component => {\n      if (!currentSet.has(component)) {\n        toAdd.push(component);\n        currentSet.add(component);\n      }\n    });\n    currentSet.forEach(component => {\n      if (!newSet.has(component)) {\n        toRemove.push(component);\n        currentSet.delete(component);\n      }\n    });\n    return {\n      toAdd,\n      toRemove\n    };\n  }\n\n  _getInternalPlacemarks(placemarks) {\n    return placemarks.filter(component => !!component.placemark).map(component => component.placemark);\n  }\n\n  _getInternalGeoObjects(geoObjects) {\n    return geoObjects.filter(component => !!component.geoObject).map(component => component.geoObject);\n  }\n\n}\n\nYaClustererComponent.ɵfac = function YaClustererComponent_Factory(t) {\n  return new (t || YaClustererComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(YaMapComponent));\n};\n\nYaClustererComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YaClustererComponent,\n  selectors: [[\"ya-clusterer\"]],\n  contentQueries: function YaClustererComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, YaPlacemarkDirective, 4);\n      i0.ɵɵcontentQuery(dirIndex, YaGeoObjectDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._placemarks = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._geoObjects = _t);\n    }\n  },\n  inputs: {\n    options: \"options\"\n  },\n  outputs: {\n    ready: \"ready\",\n    hintclose: \"hintclose\",\n    hintopen: \"hintopen\",\n    mapchange: \"mapchange\",\n    optionschange: \"optionschange\",\n    parentchange: \"parentchange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function YaClustererComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaClustererComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ya-clusterer',\n      template: '<ng-content></ng-content>',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaMapComponent\n    }];\n  }, {\n    _placemarks: [{\n      type: ContentChildren,\n      args: [YaPlacemarkDirective]\n    }],\n    _geoObjects: [{\n      type: ContentChildren,\n      args: [YaGeoObjectDirective]\n    }],\n    options: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    hintclose: [{\n      type: Output\n    }],\n    hintopen: [{\n      type: Output\n    }],\n    mapchange: [{\n      type: Output\n    }],\n    optionschange: [{\n      type: Output\n    }],\n    parentchange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * The `ya-control` component wraps `ymaps.control[YaControlType]` classes from the Yandex.Maps API.\n * You can configure `ymaps.control[YaControlType]` via the component's inputs.\n * API Events can be bound only manually. You can use `ready` event to get an instance.\n *\n * <example-url>https://stackblitz.com/edit/searchcontrol?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-control\n *     type=\"RoutePanel\"\n *     [parameters]=\"{ options: { float: 'right' } }\"\n *   ></ya-control>\n * </ya-map>\n * ```\n */\n\n\nclass YaControlDirective {\n  constructor(_ngZone, _yaMapComponent) {\n    this._ngZone = _ngZone;\n    this._yaMapComponent = _yaMapComponent;\n    this._sub = new Subscription();\n    /**\n     * Control instance is added in a Map.\n     */\n\n    this.ready = new EventEmitter();\n  }\n\n  ngOnChanges() {\n    if (this._control) {\n      console.warn('Control does not support dynamic configuration. You can config it manually using ymaps or recreate the component with new configuration');\n    }\n  }\n\n  ngOnInit() {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe(map => {\n        if (map) {\n          const control = new ymaps.control[this.type](this.parameters);\n          this._control = control;\n          /**\n           * RoutePanel ignores state in parameters. API bug\n           */\n\n          if (control instanceof ymaps.control.RoutePanel && this.parameters && this.parameters.state) {\n            control.routePanel.state.set(Object.assign({}, this.parameters.state));\n          }\n\n          map.controls.add(control);\n\n          this._ngZone.run(() => this.ready.emit({\n            ymaps,\n            target: control\n          }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy() {\n    var _a, _b;\n\n    if (this._control) {\n      (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.controls.remove(this._control);\n    }\n  }\n\n}\n\nYaControlDirective.ɵfac = function YaControlDirective_Factory(t) {\n  return new (t || YaControlDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(YaMapComponent));\n};\n\nYaControlDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: YaControlDirective,\n  selectors: [[\"ya-control\"]],\n  inputs: {\n    type: \"type\",\n    parameters: \"parameters\"\n  },\n  outputs: {\n    ready: \"ready\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaControlDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ya-control'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaMapComponent\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    parameters: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * The `ya-multiroute` component wraps `ymaps.multiRouter.MultiRoute` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/multiroute-pedestrian?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-multiroute\n *     [referencePoints]=\"[[55.751952, 37.600739], 'Красные ворота, Москва']\"\n *     [model]=\"{ params: { routingMode: 'pedestrian' } }\"\n *   ></ya-multiroute>\n * </ya-map>\n * ```\n */\n\n\nclass YaMultirouteDirective {\n  constructor(_ngZone, _yaMapComponent) {\n    this._ngZone = _ngZone;\n    this._yaMapComponent = _yaMapComponent;\n    this._sub = new Subscription();\n    this._eventManager = new EventManager(this._ngZone);\n    /**\n     * Multiroute instance is added in a Map.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * Change to the active route.\n     */\n\n    this.activeroutechange = this._eventManager.getLazyEmitter('activeroutechange');\n    /**\n     * Closing the balloon.\n     */\n\n    this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n    /**\n     * Opening a balloon on a map.\n     */\n\n    this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n    /**\n     * The event occurs at the time of setting the map center and its zoom level for optimal display of the multi-route.\n     */\n\n    this.boundsautoapply = this._eventManager.getLazyEmitter('boundsautoapply');\n    /**\n     * Changing coordinates of the geographical area covering the multi-route.\n     */\n\n    this.boundschange = this._eventManager.getLazyEmitter('boundschange');\n    /**\n     * Single left-click on the object.\n     */\n\n    this.yaclick = this._eventManager.getLazyEmitter('click');\n    /**\n     * Calls the element's context menu.\n     */\n\n    this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n    /**\n     * Double left-click on the object.\n     */\n\n    this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * Change to the geo object geometry.\n     */\n\n    this.geometrychange = this._eventManager.getLazyEmitter('geometrychange');\n    /**\n     * Map reference changed.\n     */\n\n    this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n    /**\n     * Pressing the mouse button over the object.\n     */\n\n    this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * Pointing the cursor at the object.\n     */\n\n    this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n    /**\n     * Moving the cursor off of the object.\n     */\n\n    this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n    /**\n     * Moving the cursor over the object.\n     */\n\n    this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * Letting go of the mouse button over an object.\n     */\n\n    this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * End of multitouch.\n     */\n\n    this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n    /**\n     * Repeating event during multitouch.\n     */\n\n    this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n    /**\n     * Start of multitouch.\n     */\n\n    this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n    /**\n     * Change to the object options.\n     */\n\n    this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n    /**\n     * Change to the geo object overlay.\n     */\n\n    this.overlaychange = this._eventManager.getLazyEmitter('overlaychange');\n    /**\n     * The parent object reference changed.\n     */\n\n    this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n    /**\n     * Changing pixel coordinates of the area covering the multi-route.\n     */\n\n    this.pixelboundschange = this._eventManager.getLazyEmitter('pixelboundschange');\n    /**\n     * Change to the geo object data.\n     */\n\n    this.propertieschange = this._eventManager.getLazyEmitter('propertieschange');\n    /**\n     * Updating the multi-route.\n     */\n\n    this.update = this._eventManager.getLazyEmitter('update');\n    /**\n     * Mouse wheel scrolling.\n     */\n\n    this.yawheel = this._eventManager.getLazyEmitter('wheel');\n  }\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n\n\n  ngOnChanges(changes) {\n    const multiroute = this._multiroute;\n\n    if (multiroute) {\n      const {\n        referencePoints,\n        model,\n        options\n      } = changes;\n\n      if (model) {\n        this._setModel(model.currentValue, multiroute);\n      }\n\n      if (referencePoints) {\n        multiroute.model.setReferencePoints(referencePoints.currentValue);\n      }\n\n      if (options) {\n        multiroute.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe(map => {\n        if (map) {\n          const multiroute = this._createMultiroute();\n\n          this._multiroute = multiroute;\n          map.geoObjects.add(multiroute);\n\n          this._eventManager.setTarget(multiroute);\n\n          this._ngZone.run(() => this.ready.emit({\n            ymaps,\n            target: multiroute\n          }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy() {\n    var _a, _b;\n\n    if (this._multiroute) {\n      (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this._multiroute);\n\n      this._eventManager.destroy();\n    }\n\n    this._sub.unsubscribe();\n  }\n  /**\n   * Destructs state and passes them in API.\n   * @param model\n   * @param multiroute\n   */\n\n\n  _setModel(model, multiroute) {\n    const {\n      referencePoints,\n      params\n    } = model;\n\n    if (referencePoints) {\n      multiroute.model.setReferencePoints(referencePoints);\n    }\n\n    if (params) {\n      multiroute.model.setParams(params);\n    }\n  }\n  /**\n   * Creates Multiroute.\n   */\n\n\n  _createMultiroute() {\n    return new ymaps.multiRouter.MultiRoute(this._combineModel(), this.options);\n  }\n  /**\n   * Combines the model and reference points into single object\n   */\n\n\n  _combineModel() {\n    const model = this.model || {};\n    return Object.assign(Object.assign({}, model), {\n      referencePoints: this.referencePoints || model.referencePoints\n    });\n  }\n\n}\n\nYaMultirouteDirective.ɵfac = function YaMultirouteDirective_Factory(t) {\n  return new (t || YaMultirouteDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(YaMapComponent));\n};\n\nYaMultirouteDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: YaMultirouteDirective,\n  selectors: [[\"ya-multiroute\"]],\n  inputs: {\n    referencePoints: \"referencePoints\",\n    model: \"model\",\n    options: \"options\"\n  },\n  outputs: {\n    ready: \"ready\",\n    activeroutechange: \"activeroutechange\",\n    balloonclose: \"balloonclose\",\n    balloonopen: \"balloonopen\",\n    boundsautoapply: \"boundsautoapply\",\n    boundschange: \"boundschange\",\n    yaclick: \"yaclick\",\n    yacontextmenu: \"yacontextmenu\",\n    yadblclick: \"yadblclick\",\n    geometrychange: \"geometrychange\",\n    mapchange: \"mapchange\",\n    yamousedown: \"yamousedown\",\n    yamouseenter: \"yamouseenter\",\n    yamouseleave: \"yamouseleave\",\n    yamousemove: \"yamousemove\",\n    yamouseup: \"yamouseup\",\n    multitouchend: \"multitouchend\",\n    multitouchmove: \"multitouchmove\",\n    multitouchstart: \"multitouchstart\",\n    optionschange: \"optionschange\",\n    overlaychange: \"overlaychange\",\n    parentchange: \"parentchange\",\n    pixelboundschange: \"pixelboundschange\",\n    propertieschange: \"propertieschange\",\n    update: \"update\",\n    yawheel: \"yawheel\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaMultirouteDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ya-multiroute'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaMapComponent\n    }];\n  }, {\n    referencePoints: [{\n      type: Input\n    }],\n    model: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    activeroutechange: [{\n      type: Output\n    }],\n    balloonclose: [{\n      type: Output\n    }],\n    balloonopen: [{\n      type: Output\n    }],\n    boundsautoapply: [{\n      type: Output\n    }],\n    boundschange: [{\n      type: Output\n    }],\n    yaclick: [{\n      type: Output\n    }],\n    yacontextmenu: [{\n      type: Output\n    }],\n    yadblclick: [{\n      type: Output\n    }],\n    geometrychange: [{\n      type: Output\n    }],\n    mapchange: [{\n      type: Output\n    }],\n    yamousedown: [{\n      type: Output\n    }],\n    yamouseenter: [{\n      type: Output\n    }],\n    yamouseleave: [{\n      type: Output\n    }],\n    yamousemove: [{\n      type: Output\n    }],\n    yamouseup: [{\n      type: Output\n    }],\n    multitouchend: [{\n      type: Output\n    }],\n    multitouchmove: [{\n      type: Output\n    }],\n    multitouchstart: [{\n      type: Output\n    }],\n    optionschange: [{\n      type: Output\n    }],\n    overlaychange: [{\n      type: Output\n    }],\n    parentchange: [{\n      type: Output\n    }],\n    pixelboundschange: [{\n      type: Output\n    }],\n    propertieschange: [{\n      type: Output\n    }],\n    update: [{\n      type: Output\n    }],\n    yawheel: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * The `ya-panorama` component wraps `ymaps.panorama.Player` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/panorama?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map>\n *   <ya-panorama [point]=\"[59.938557, 30.316198]\" layer=\"yandex#airPanorama\"></ya-panorama>\n * </ya-map>\n * ```\n */\n\n\nclass YaPanoramaDirective {\n  constructor(_ngZone, _yaMapComponent) {\n    this._ngZone = _ngZone;\n    this._yaMapComponent = _yaMapComponent;\n    this._sub = new Subscription();\n    this._eventManager = new EventManager(this._ngZone);\n    /**\n     * Panorama instance is created.\n     */\n\n    this.ready = new EventEmitter();\n    /**\n     * The player was closed by the user or destroyed using the panorama.Player.destroy method.\n     */\n\n    this.destroy = this._eventManager.getLazyEmitter('destroy');\n    /**\n     * The view direction changed.\n     */\n\n    this.directionchange = this._eventManager.getLazyEmitter('directionchange');\n    /**\n     * An error occurred during operation of the player. The user will be shown the appropriate screen.\n     */\n\n    this.yaerror = this._eventManager.getLazyEmitter('error');\n    /**\n     * The panorama player switched to full-screen mode.\n     */\n\n    this.fullscreenenter = this._eventManager.getLazyEmitter('fullscreenenter');\n    /**\n     * The panorama player exited full-screen mode.\n     */\n\n    this.fullscreenexit = this._eventManager.getLazyEmitter('fullscreenexit');\n    /**\n     * The user clicked on an expanded marker.\n     */\n\n    this.markercollapse = this._eventManager.getLazyEmitter('markercollapse');\n    /**\n     * The user clicked on a collapsed marker.\n     */\n\n    this.markerexpand = this._eventManager.getLazyEmitter('markerexpand');\n    /**\n     * The user's cursor hovered over a marker.\n     */\n\n    this.markermouseenter = this._eventManager.getLazyEmitter('markermouseenter');\n    /**\n     * The user's cursor left a marker.\n     */\n\n    this.markermouseleave = this._eventManager.getLazyEmitter('markermouseleave');\n    /**\n     * The open panorama changed.\n     */\n\n    this.panoramachange = this._eventManager.getLazyEmitter('panoramachange');\n    /**\n     * The size of the viewport has been changed.\n     */\n\n    this.spanchange = this._eventManager.getLazyEmitter('spanchange');\n  }\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n\n\n  ngOnChanges(changes) {\n    const player = this._player;\n\n    if (player) {\n      const {\n        point,\n        layer,\n        options\n      } = changes;\n      /**\n       * player.moveTo resets values to default if any of them isn't passed.\n       * That's why we use value from currentValue OR previous value from input.\n       * With that logic it's possible to pass only point, layer or options.\n       */\n\n      if (point || layer) {\n        const combinedPoint = (point === null || point === void 0 ? void 0 : point.currentValue) || this.point;\n        const combinedLayer = (layer === null || layer === void 0 ? void 0 : layer.currentValue) || this.layer;\n        player.moveTo(combinedPoint, {\n          layer: combinedLayer\n        });\n      }\n\n      if (options) {\n        this._setOptions(options.currentValue, player);\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this._yaMapComponent.isBrowser) {\n      const panorama$ = this._yaMapComponent.map$.pipe(filter(m => Boolean(m)), switchMap(m => {\n        /**\n         * Map and panorama use the same container, so need to destroy/remove map\n         */\n        m.destroy();\n        return this._createPanorama();\n      }));\n\n      const sub = panorama$.subscribe(panorama => {\n        const {\n          id\n        } = this._yaMapComponent.container.nativeElement;\n        const player = new ymaps.panorama.Player(id, panorama, this.options);\n        this._player = player;\n\n        this._eventManager.setTarget(player);\n\n        this._ngZone.run(() => this.ready.emit({\n          ymaps,\n          target: player\n        }));\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy() {\n    this._eventManager.destroy();\n\n    this._sub.unsubscribe();\n  }\n  /**\n   * Destructs state and passes it in API.\n   * @param options\n   * @param player\n   */\n\n\n  _setOptions(options, player) {\n    const {\n      autoFitToViewport,\n      controls,\n      direction,\n      hotkeysEnabled,\n      span,\n      scrollZoomBehavior,\n      suppressMapOpenBlock\n    } = options;\n\n    if (autoFitToViewport || controls || hotkeysEnabled || scrollZoomBehavior || suppressMapOpenBlock) {\n      console.warn('Only direction and span can be set after entity init. To set other options, you should recreate a Panorama with new options');\n    }\n\n    if (direction) {\n      player.setDirection(direction);\n    }\n\n    if (span) {\n      player.setSpan(span);\n    }\n  }\n  /**\n   * Searches for a panorama and returns first\n   */\n\n\n  _createPanorama() {\n    return from(ymaps.panorama.locate(this.point, {\n      layer: this.layer\n    })).pipe(map(panoramas => panoramas[0]));\n  }\n\n}\n\nYaPanoramaDirective.ɵfac = function YaPanoramaDirective_Factory(t) {\n  return new (t || YaPanoramaDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(YaMapComponent));\n};\n\nYaPanoramaDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: YaPanoramaDirective,\n  selectors: [[\"ya-panorama\"]],\n  inputs: {\n    point: \"point\",\n    layer: \"layer\",\n    options: \"options\"\n  },\n  outputs: {\n    ready: \"ready\",\n    destroy: \"destroy\",\n    directionchange: \"directionchange\",\n    yaerror: \"yaerror\",\n    fullscreenenter: \"fullscreenenter\",\n    fullscreenexit: \"fullscreenexit\",\n    markercollapse: \"markercollapse\",\n    markerexpand: \"markerexpand\",\n    markermouseenter: \"markermouseenter\",\n    markermouseleave: \"markermouseleave\",\n    panoramachange: \"panoramachange\",\n    spanchange: \"spanchange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaPanoramaDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ya-panorama'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaMapComponent\n    }];\n  }, {\n    point: [{\n      type: Input\n    }],\n    layer: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    directionchange: [{\n      type: Output\n    }],\n    yaerror: [{\n      type: Output\n    }],\n    fullscreenenter: [{\n      type: Output\n    }],\n    fullscreenexit: [{\n      type: Output\n    }],\n    markercollapse: [{\n      type: Output\n    }],\n    markerexpand: [{\n      type: Output\n    }],\n    markermouseenter: [{\n      type: Output\n    }],\n    markermouseleave: [{\n      type: Output\n    }],\n    panoramachange: [{\n      type: Output\n    }],\n    spanchange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass AngularYandexMapsModule {\n  /**\n   * Please use this method when you register the module at the root level\n   * @param config\n   */\n  static forRoot(config) {\n    return {\n      ngModule: AngularYandexMapsModule,\n      providers: [{\n        provide: YA_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nAngularYandexMapsModule.ɵfac = function AngularYandexMapsModule_Factory(t) {\n  return new (t || AngularYandexMapsModule)();\n};\n\nAngularYandexMapsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularYandexMapsModule\n});\nAngularYandexMapsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularYandexMapsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [YaClustererComponent, YaControlDirective, YaGeoObjectDirective, YaMapComponent, YaMultirouteDirective, YaPanoramaDirective, YaPlacemarkDirective],\n      exports: [YaClustererComponent, YaControlDirective, YaGeoObjectDirective, YaMapComponent, YaMultirouteDirective, YaPanoramaDirective, YaPlacemarkDirective]\n    }]\n  }], null, null);\n})();\n/**\n * The `YaGeocoder` service wraps `ymaps.geocode` static function from the Yandex.Maps API.\n *\n * @example\n * ```ts\n * import { YaGeocoderService } from 'angular8-yandex-maps';\n *\n * export class AppComponent {\n *   constructor(private yaGeocoderService: YaGeocoderService) {\n *     this.yaGeocoderService.geocode('Moscow')\n *       .subscribe(v => console.log(v))\n *   }\n * }\n * ```\n */\n\n\nclass YaGeocoderService {\n  constructor(_ngZone, _yaApiLoaderService) {\n    this._ngZone = _ngZone;\n    this._yaApiLoaderService = _yaApiLoaderService;\n  }\n  /**\n   * Processes geocoding requests.\n   * @param request The address for which coordinates need to be obtained (forward geocoding), or the coordinates for which the address needs to be determined (reverse geocoding).\n   * @param options Options.\n   */\n\n\n  geocode(request, options) {\n    return this._yaApiLoaderService.load().pipe(switchMap(() => from(ymaps.geocode(request, options))), switchMap(result => new Observable(observer => {\n      this._ngZone.run(() => {\n        observer.next(result);\n        observer.complete();\n      });\n    })));\n  }\n\n}\n\nYaGeocoderService.ɵfac = function YaGeocoderService_Factory(t) {\n  return new (t || YaGeocoderService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(YaApiLoaderService));\n};\n\nYaGeocoderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: YaGeocoderService,\n  factory: YaGeocoderService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YaGeocoderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: YaApiLoaderService\n    }];\n  }, null);\n})();\n/*\n * Public API Surface of angular8-yandex-maps\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularYandexMapsModule, YA_CONFIG, YaApiLoaderService, YaClustererComponent, YaControlDirective, YaGeoObjectDirective, YaGeocoderService, YaMapComponent, YaMultirouteDirective, YaPanoramaDirective, YaPlacemarkDirective };","map":{"version":3,"sources":["C:/Users/Entity/Desktop/web-oaoamm/node_modules/angular8-yandex-maps/fesm2015/angular8-yandex-maps.mjs"],"names":["i0","InjectionToken","Injectable","Optional","Inject","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewChild","Input","Output","Directive","ContentChildren","NgModule","__rest","DOCUMENT","isPlatformBrowser","from","fromEvent","throwError","merge","BehaviorSubject","Observable","Subscription","map","switchMap","take","filter","YA_CONFIG","YaApiLoaderService","constructor","config","_document","_defaultConfig","lang","_config","Object","assign","load","window","ymaps","ready","pipe","_script","script","createElement","type","src","_getScriptSource","id","async","defer","body","appendChild","error","e","enterprise","version","rest","params","_convertConfigIntoQueryParams","entries","key","value","join","ɵfac","ɵprov","args","providedIn","undefined","decorators","Document","EventManager","_ngZone","_pending","_listeners","_targetStream","getLazyEmitter","name","target","observable","observer","push","callback","event","run","next","listener","events","add","manager","remove","setTarget","currentTarget","_clearListeners","forEach","subscriber","subscribe","destroy","complete","generateRandomId","Number","Date","toString","YaMapComponent","_yaApiLoaderService","platformId","_sub","_eventManager","map$","actionbegin","actionbreak","actionend","actiontick","actiontickcomplete","balloonclose","balloonopen","boundschange","yaclick","yacontextmenu","yadblclick","hintclose","hintopen","marginchange","yamousedown","yamouseenter","yamouseleave","yamousemove","yamouseup","multitouchend","multitouchmove","multitouchstart","optionschange","sizechange","typechange","yawheel","isBrowser","ngOnChanges","changes","center","zoom","state","options","_setState","_combineState","setCenter","currentValue","setZoom","set","ngAfterViewInit","sub","_createMap","emit","ngOnDestroy","unsubscribe","behaviors","bounds","controls","margin","enable","setBounds","control","setDefaultMargin","setType","containerElem","container","nativeElement","setAttribute","style","cssText","Map","_a","_b","NgZone","ɵcmp","selector","template","changeDetection","OnPush","YaGeoObjectDirective","_yaMapComponent","beforedrag","beforedragstart","yadrag","yadragend","yadragstart","editorstatechange","geometrychange","mapchange","overlaychange","parentchange","propertieschange","geoObject","feature","_setFeature","ngOnInit","_createGeoObject","geoObjects","geometry","properties","console","warn","GeoObject","ɵdir","YaPlacemarkDirective","placemark","setCoordinates","_createPlacemark","Placemark","YaClustererComponent","clusterer","_clusterer","ngAfterContentInit","_createClusterer","_watchForContentChanges","Clusterer","currentPlacemarks","Set","_getInternalPlacemarks","_placemarks","toArray","placemarksSub","placemarkDirectives","newPlacemarks","difference","_getDifference","toAdd","toRemove","currentGeoObjects","_getInternalGeoObjects","_geoObjects","geoObjectsSub","geoObjectDirectives","newGeoObjects","newSet","currentSet","component","has","delete","placemarks","YaControlDirective","_control","parameters","RoutePanel","routePanel","YaMultirouteDirective","activeroutechange","boundsautoapply","pixelboundschange","update","multiroute","_multiroute","referencePoints","model","_setModel","setReferencePoints","_createMultiroute","setParams","multiRouter","MultiRoute","_combineModel","YaPanoramaDirective","directionchange","yaerror","fullscreenenter","fullscreenexit","markercollapse","markerexpand","markermouseenter","markermouseleave","panoramachange","spanchange","player","_player","point","layer","combinedPoint","combinedLayer","moveTo","_setOptions","panorama$","m","Boolean","_createPanorama","panorama","Player","autoFitToViewport","direction","hotkeysEnabled","span","scrollZoomBehavior","suppressMapOpenBlock","setDirection","setSpan","locate","panoramas","AngularYandexMapsModule","forRoot","ngModule","providers","provide","useValue","ɵmod","ɵinj","declarations","exports","YaGeocoderService","geocode","request","result"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewChild, Input, Output, Directive, ContentChildren, NgModule } from '@angular/core';\nimport { __rest } from 'tslib';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { from, fromEvent, throwError, merge, BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, filter } from 'rxjs/operators';\n\n\"use strict\";\n\n/**\n * Injection token to specify configuration.\n */\nconst YA_CONFIG = new InjectionToken('YA_CONFIG');\n/**\n * The `YaApiLoader` service handles loading of Yandex.Maps API.\n *\n * @example\n * ```ts\n * import { YaApiLoaderService } from 'angular8-yandex-maps';\n *\n * export class AppComponent {\n *   constructor(private yaApiLoaderService: YaApiLoaderService) {\n *     this.yaApiLoaderService.load()\n *       .subscribe(v => console.log(v))\n *   }\n * }\n *```\n *\n * @dynamic\n */\nclass YaApiLoaderService {\n    constructor(config, _document) {\n        this._document = _document;\n        this._defaultConfig = { lang: 'ru_RU' };\n        this._config = Object.assign(Object.assign({}, this._defaultConfig), config);\n    }\n    /**\n     * Loads Yandex.Maps API.\n     */\n    load() {\n        if (window.ymaps) {\n            return from(ymaps.ready()).pipe(map(() => ymaps));\n        }\n        if (!this._script) {\n            const script = this._document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = this._getScriptSource(this._config);\n            script.id = 'yandexMapsApiScript';\n            script.async = true;\n            script.defer = true;\n            this._script = this._document.body.appendChild(script);\n        }\n        const load = fromEvent(this._script, 'load').pipe(switchMap(() => from(ymaps.ready()).pipe(map(() => ymaps))));\n        const error = fromEvent(this._script, 'error').pipe(switchMap((e) => throwError(e)));\n        return merge(load, error).pipe(take(1));\n    }\n    /**\n     * Returns script source by config.\n     * @param config config with parameters that will be added in source\n     * @example\n     * // returns 'https://api-maps.yandex.ru/2.1/?apikey=658f67a2-fd77-42e9-b99e-2bd48c4ccad4&lang=en_US'\n     * getScriptSource({ apikey: '658f67a2-fd77-42e9-b99e-2bd48c4ccad4', lang: 'en_US' })\n     */\n    _getScriptSource(config) {\n        const { enterprise, version = '2.1' } = config, rest = __rest(config, [\"enterprise\", \"version\"]);\n        const params = this._convertConfigIntoQueryParams(rest);\n        return `https://${enterprise ? 'enterprise.' : ''}api-maps.yandex.ru/${version}/?${params}`;\n    }\n    /**\n     * Converts a config into a query string parameters.\n     * @param config object for converting\n     * @example\n     * // returns \"lang=ru_RU&apikey=XXX\"\n     * convertIntoQueryParams({ lang: 'ru_RU', apikey: 'XXX' })\n     */\n    _convertConfigIntoQueryParams(config) {\n        return Object.entries(config)\n            .map(([key, value]) => `${key}=${value}`)\n            .join('&');\n    }\n}\nYaApiLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaApiLoaderService, deps: [{ token: YA_CONFIG, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nYaApiLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaApiLoaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaApiLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [YA_CONFIG]\n                    }] }, { type: Document, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * Copied from angular/components/google-maps and edited for Yandex.Maps API.\n * {@link https://github.com/angular/components/blob/master/src/google-maps/map-event-manager.ts}\n */\n/**\n * Manages event on a Yandex.Maps object, ensuring that events are added only when necessary.\n * @internal\n */\nclass EventManager {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * Listeners that were added before the target was set.\n         */\n        this._pending = [];\n        this._listeners = [];\n        this._targetStream = new BehaviorSubject(undefined);\n    }\n    /**\n     * Gets an observable that adds an event listener to the map when a consumer subscribes to it.\n     * @param name\n     */\n    getLazyEmitter(name) {\n        return this._targetStream.pipe(switchMap((target) => {\n            const observable = new Observable((observer) => {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!target) {\n                    this._pending.push({ observable, observer });\n                    return undefined;\n                }\n                const callback = (event) => {\n                    const e = {\n                        event,\n                        target,\n                        ymaps,\n                    };\n                    this._ngZone.run(() => observer.next(e));\n                };\n                const listener = target.events.add(name, callback);\n                this._listeners.push({ name, callback, manager: listener });\n                // Unsubscribe function\n                return () => listener.remove(name, callback);\n            });\n            return observable;\n        }));\n    }\n    /**\n     * Sets the current target that the manager should bind events to.\n     * @param target\n     */\n    setTarget(target) {\n        const currentTarget = this._targetStream.value;\n        if (target === currentTarget) {\n            return;\n        }\n        // Clear the listeners from the pre-existing target.\n        if (currentTarget) {\n            this._clearListeners();\n            this._pending = [];\n        }\n        this._targetStream.next(target);\n        // Add the listeners that were bound before the map was initialized.\n        this._pending.forEach((subscriber) => subscriber.observable.subscribe(subscriber.observer));\n        this._pending = [];\n    }\n    /**\n     * Destroys the manager and clears the event listeners.\n     */\n    destroy() {\n        this._clearListeners();\n        this._pending = [];\n        this._targetStream.complete();\n    }\n    /**\n     * Clears all currently-registered event listeners.\n     */\n    _clearListeners() {\n        this._listeners.forEach((listener) => {\n            const { name, callback, manager } = listener;\n            manager.remove(name, callback);\n        });\n        this._listeners = [];\n    }\n}\n\n/**\n * Generates a random string based on Date in hexadecimal numeral system\n * @example f175517fa4f3\n * @internal\n */\nconst generateRandomId = () => `f${Number(new Date()).toString(16)}`;\n\n/**\n * The `ya-map` component wraps `ymaps.Map` class from the Yandex.Maps API.\n * You can configure the map via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/map-onload-event?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map\n *   [center]=\"[55.751952, 37.600739]\"\n *   [state]=\"{type: 'yandex#satellite'}\"\n * ></ya-map>\n * ```\n */\nclass YaMapComponent {\n    constructor(_ngZone, _yaApiLoaderService, \n    /*\n     * We need to use the same type like in an Angular.\n     * \"export declare const PLATFORM_ID: InjectionToken<Object>\"\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId) {\n        this._ngZone = _ngZone;\n        this._yaApiLoaderService = _yaApiLoaderService;\n        this._sub = new Subscription();\n        this._eventManager = new EventManager(this._ngZone);\n        this.map$ = new BehaviorSubject(undefined);\n        /**\n         * Map instance is created.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * The start of a new smooth map movement.\n         */\n        this.actionbegin = this._eventManager.getLazyEmitter('actionbegin');\n        /**\n         * Event that occurs when an action step was prematurely stopped.\n         */\n        this.actionbreak = this._eventManager.getLazyEmitter('actionbreak');\n        /**\n         * The end of smooth map movement.\n         */\n        this.actionend = this._eventManager.getLazyEmitter('actionend');\n        /**\n         * The start of a new step of smooth movement.\n         */\n        this.actiontick = this._eventManager.getLazyEmitter('actiontick');\n        /**\n         * The end of performing a step of smooth movement.\n         */\n        this.actiontickcomplete = this._eventManager.getLazyEmitter('actiontickcomplete');\n        /**\n         * Closing the balloon.\n         */\n        this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n        /**\n         * Opening a balloon on a map.\n         */\n        this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n        /**\n         * Event for a change to the map viewport.\n         */\n        this.boundschange = this._eventManager.getLazyEmitter('boundschange');\n        /**\n         * Single left-click on the object.\n         */\n        this.yaclick = this._eventManager.getLazyEmitter('click');\n        /**\n         * Calls the element's context menu.\n         */\n        this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n        /**\n         * Double left-click on the object.\n         */\n        this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * The map was destroyed.\n         */\n        this.destroy = this._eventManager.getLazyEmitter('destroy');\n        /**\n         * Closing the hint.\n         */\n        this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n        /**\n         * Opening a hint on a map.\n         */\n        this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n        /**\n         * Map margins changed.\n         */\n        this.marginchange = this._eventManager.getLazyEmitter('marginchange');\n        /**\n         * Pressing the mouse button over the object.\n         */\n        this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * Pointing the cursor at the object.\n         */\n        this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n        /**\n         * Moving the cursor off of the object.\n         */\n        this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n        /**\n         * Moving the cursor over the object.\n         */\n        this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * Letting go of the mouse button over an object.\n         */\n        this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * End of multitouch.\n         */\n        this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n        /**\n         * Repeating event during multitouch.\n         */\n        this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n        /**\n         * Start of multitouch.\n         */\n        this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n        /**\n         * Map options changed.\n         */\n        this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n        /**\n         * Map size changed.\n         */\n        this.sizechange = this._eventManager.getLazyEmitter('sizechange');\n        /**\n         * The map type changed.\n         */\n        this.typechange = this._eventManager.getLazyEmitter('typechange');\n        /**\n         * Mouse wheel scrolling.\n         */\n        this.yawheel = this._eventManager.getLazyEmitter('wheel');\n        this.isBrowser = isPlatformBrowser(platformId);\n    }\n    /**\n     * Handles input changes and passes them in API.\n     * @param changes\n     */\n    ngOnChanges(changes) {\n        const map = this.map$.value;\n        if (map) {\n            const { center, zoom, state, options } = changes;\n            if (state) {\n                this._setState(this._combineState(), map);\n            }\n            if (center) {\n                map.setCenter(center.currentValue);\n            }\n            if (zoom) {\n                map.setZoom(zoom.currentValue);\n            }\n            if (options) {\n                map.options.set(options.currentValue);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        /**\n         * It should be a noop during server-side rendering.\n         */\n        if (this.isBrowser) {\n            const sub = this._yaApiLoaderService.load().subscribe(() => {\n                const id = generateRandomId();\n                const map = this._createMap(id);\n                this.map$.next(map);\n                this._eventManager.setTarget(map);\n                this._ngZone.run(() => this.ready.emit({ ymaps, target: map }));\n            });\n            this._sub.add(sub);\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._sub.unsubscribe();\n    }\n    /**\n     * Destructs state and passes it in API.\n     * @param state\n     * @param map\n     */\n    _setState(state, map) {\n        const { behaviors, bounds, center, controls, margin, type, zoom } = state;\n        if (behaviors) {\n            map.behaviors.enable(behaviors);\n        }\n        if (bounds) {\n            map.setBounds(bounds);\n        }\n        if (center) {\n            map.setCenter(center);\n        }\n        if (controls) {\n            controls.forEach((control) => map.controls.add(control));\n        }\n        if (margin) {\n            map.margin.setDefaultMargin(margin);\n        }\n        if (type) {\n            map.setType(type);\n        }\n        if (zoom) {\n            map.setZoom(zoom);\n        }\n    }\n    /**\n     * Creates a map.\n     * @param id ID which will be set to the map container.\n     */\n    _createMap(id) {\n        const containerElem = this.container.nativeElement;\n        containerElem.setAttribute('id', id);\n        containerElem.style.cssText = 'width: 100%; height: 100%;';\n        return new ymaps.Map(id, this._combineState(), this.options || {});\n    }\n    /**\n     * Combines the center and zoom into single object.\n     */\n    _combineState() {\n        var _a, _b;\n        const state = this.state || {};\n        return Object.assign(Object.assign({}, state), { center: this.center || state.center || [0, 0], zoom: (_b = (_a = this.zoom) !== null && _a !== void 0 ? _a : state.zoom) !== null && _b !== void 0 ? _b : 10 });\n    }\n}\nYaMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaMapComponent, deps: [{ token: i0.NgZone }, { token: YaApiLoaderService }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYaMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: YaMapComponent, selector: \"ya-map\", inputs: { center: \"center\", zoom: \"zoom\", state: \"state\", options: \"options\" }, outputs: { ready: \"ready\", actionbegin: \"actionbegin\", actionbreak: \"actionbreak\", actionend: \"actionend\", actiontick: \"actiontick\", actiontickcomplete: \"actiontickcomplete\", balloonclose: \"balloonclose\", balloonopen: \"balloonopen\", boundschange: \"boundschange\", yaclick: \"yaclick\", yacontextmenu: \"yacontextmenu\", yadblclick: \"yadblclick\", destroy: \"destroy\", hintclose: \"hintclose\", hintopen: \"hintopen\", marginchange: \"marginchange\", yamousedown: \"yamousedown\", yamouseenter: \"yamouseenter\", yamouseleave: \"yamouseleave\", yamousemove: \"yamousemove\", yamouseup: \"yamouseup\", multitouchend: \"multitouchend\", multitouchmove: \"multitouchmove\", multitouchstart: \"multitouchstart\", optionschange: \"optionschange\", sizechange: \"sizechange\", typechange: \"typechange\", yawheel: \"yawheel\" }, viewQueries: [{ propertyName: \"container\", first: true, predicate: [\"container\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: '<div #container></div>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaMapComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ya-map',\n                    template: '<div #container></div>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: YaApiLoaderService }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { container: [{\n                type: ViewChild,\n                args: ['container']\n            }], center: [{\n                type: Input\n            }], zoom: [{\n                type: Input\n            }], state: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], actionbegin: [{\n                type: Output\n            }], actionbreak: [{\n                type: Output\n            }], actionend: [{\n                type: Output\n            }], actiontick: [{\n                type: Output\n            }], actiontickcomplete: [{\n                type: Output\n            }], balloonclose: [{\n                type: Output\n            }], balloonopen: [{\n                type: Output\n            }], boundschange: [{\n                type: Output\n            }], yaclick: [{\n                type: Output\n            }], yacontextmenu: [{\n                type: Output\n            }], yadblclick: [{\n                type: Output\n            }], destroy: [{\n                type: Output\n            }], hintclose: [{\n                type: Output\n            }], hintopen: [{\n                type: Output\n            }], marginchange: [{\n                type: Output\n            }], yamousedown: [{\n                type: Output\n            }], yamouseenter: [{\n                type: Output\n            }], yamouseleave: [{\n                type: Output\n            }], yamousemove: [{\n                type: Output\n            }], yamouseup: [{\n                type: Output\n            }], multitouchend: [{\n                type: Output\n            }], multitouchmove: [{\n                type: Output\n            }], multitouchstart: [{\n                type: Output\n            }], optionschange: [{\n                type: Output\n            }], sizechange: [{\n                type: Output\n            }], typechange: [{\n                type: Output\n            }], yawheel: [{\n                type: Output\n            }] } });\n\n/**\n * The `ya-geoobject` component wraps `ymaps.GeoObject` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/geoobject-polygon?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-geoobject\n *     [feature]=\"{ geometry: { type: 'Rectangle', coordinates: [[55.665, 37.66], [55.64,37.53]] } }\"\n *   ></ya-geoobject>\n * </ya-map>\n * ```\n */\nclass YaGeoObjectDirective {\n    constructor(_ngZone, _yaMapComponent) {\n        this._ngZone = _ngZone;\n        this._yaMapComponent = _yaMapComponent;\n        this._sub = new Subscription();\n        this._eventManager = new EventManager(this._ngZone);\n        /**\n         * GeoObject instance is added in a Map.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * Closing the balloon.\n         */\n        this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n        /**\n         * Opening a balloon on a map.\n         */\n        this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n        /**\n         * Event preceding the \"drag\" event.\n         */\n        this.beforedrag = this._eventManager.getLazyEmitter('beforedrag');\n        /**\n         * Event preceding the \"dragstart\" event.\n         */\n        this.beforedragstart = this._eventManager.getLazyEmitter('beforedragstart');\n        /**\n         * Single left-click on the object.\n         */\n        this.yaclick = this._eventManager.getLazyEmitter('click');\n        /**\n         * Calls the element's context menu.\n         */\n        this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n        /**\n         * Double left-click on the object.\n         */\n        this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * Dragging a geo object.\n         */\n        this.yadrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * End of geo object dragging.\n         */\n        this.yadragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * Start of geo object dragging.\n         */\n        this.yadragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * Change in the state of the editor for the geo object's geometry.\n         */\n        this.editorstatechange = this._eventManager.getLazyEmitter('editorstatechange');\n        /**\n         * Change to the geo object geometry\n         */\n        this.geometrychange = this._eventManager.getLazyEmitter('geometrychange');\n        /**\n         * Closing the hint.\n         */\n        this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n        /**\n         * Opening a hint on a map.\n         */\n        this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n        /**\n         * Map reference changed.\n         */\n        this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n        /**\n         * Pressing the mouse button over the object.\n         */\n        this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * Pointing the cursor at the object.\n         */\n        this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n        /**\n         * Moving the cursor off of the object.\n         */\n        this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n        /**\n         * Moving the cursor over the object.\n         */\n        this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * Letting go of the mouse button over an object.\n         */\n        this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * End of multitouch.\n         */\n        this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n        /**\n         * Repeating event during multitouch.\n         */\n        this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n        /**\n         * Start of multitouch.\n         */\n        this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n        /**\n         * Change to the object options.\n         */\n        this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n        /**\n         * Change to the geo object overlay.\n         */\n        this.overlaychange = this._eventManager.getLazyEmitter('overlaychange');\n        /**\n         * The parent object reference changed.\n         */\n        this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n        /**\n         * Change to the geo object data.\n         */\n        this.propertieschange = this._eventManager.getLazyEmitter('propertieschange');\n        /**\n         * Mouse wheel scrolling.\n         */\n        this.yawheel = this._eventManager.getLazyEmitter('wheel');\n    }\n    /**\n     * Handles input changes and passes them in API.\n     * @param changes\n     */\n    ngOnChanges(changes) {\n        const { geoObject } = this;\n        if (geoObject) {\n            const { feature, options } = changes;\n            if (feature) {\n                this._setFeature(feature.currentValue, geoObject);\n            }\n            if (options) {\n                geoObject.options.set(options.currentValue);\n            }\n        }\n    }\n    ngOnInit() {\n        if (this._yaMapComponent.isBrowser) {\n            const sub = this._yaMapComponent.map$.subscribe((map) => {\n                if (map) {\n                    const geoObject = this._createGeoObject();\n                    this.geoObject = geoObject;\n                    map.geoObjects.add(geoObject);\n                    this._eventManager.setTarget(geoObject);\n                    this._ngZone.run(() => this.ready.emit({ ymaps, target: geoObject }));\n                }\n            });\n            this._sub.add(sub);\n        }\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        if (this.geoObject) {\n            (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this.geoObject);\n            this._eventManager.destroy();\n        }\n        this._sub.unsubscribe();\n    }\n    /**\n     * Destructs feature and passes it in API.\n     * @param feature\n     * @param geoObject\n     */\n    _setFeature(feature, geoObject) {\n        const { geometry, properties } = feature;\n        if (geometry) {\n            console.warn('The geometry can not be changed after entity init. To set it, you should recreate a GeoObject with new feature.geometry');\n        }\n        if (properties) {\n            geoObject.properties.set(properties);\n        }\n    }\n    /**\n     * Creates GeoObject.\n     */\n    _createGeoObject() {\n        return new ymaps.GeoObject(this.feature, this.options);\n    }\n}\nYaGeoObjectDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaGeoObjectDirective, deps: [{ token: i0.NgZone }, { token: YaMapComponent }], target: i0.ɵɵFactoryTarget.Directive });\nYaGeoObjectDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: YaGeoObjectDirective, selector: \"ya-geoobject\", inputs: { feature: \"feature\", options: \"options\" }, outputs: { ready: \"ready\", balloonclose: \"balloonclose\", balloonopen: \"balloonopen\", beforedrag: \"beforedrag\", beforedragstart: \"beforedragstart\", yaclick: \"yaclick\", yacontextmenu: \"yacontextmenu\", yadblclick: \"yadblclick\", yadrag: \"yadrag\", yadragend: \"yadragend\", yadragstart: \"yadragstart\", editorstatechange: \"editorstatechange\", geometrychange: \"geometrychange\", hintclose: \"hintclose\", hintopen: \"hintopen\", mapchange: \"mapchange\", yamousedown: \"yamousedown\", yamouseenter: \"yamouseenter\", yamouseleave: \"yamouseleave\", yamousemove: \"yamousemove\", yamouseup: \"yamouseup\", multitouchend: \"multitouchend\", multitouchmove: \"multitouchmove\", multitouchstart: \"multitouchstart\", optionschange: \"optionschange\", overlaychange: \"overlaychange\", parentchange: \"parentchange\", propertieschange: \"propertieschange\", yawheel: \"yawheel\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaGeoObjectDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ya-geoobject',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: YaMapComponent }]; }, propDecorators: { feature: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], balloonclose: [{\n                type: Output\n            }], balloonopen: [{\n                type: Output\n            }], beforedrag: [{\n                type: Output\n            }], beforedragstart: [{\n                type: Output\n            }], yaclick: [{\n                type: Output\n            }], yacontextmenu: [{\n                type: Output\n            }], yadblclick: [{\n                type: Output\n            }], yadrag: [{\n                type: Output\n            }], yadragend: [{\n                type: Output\n            }], yadragstart: [{\n                type: Output\n            }], editorstatechange: [{\n                type: Output\n            }], geometrychange: [{\n                type: Output\n            }], hintclose: [{\n                type: Output\n            }], hintopen: [{\n                type: Output\n            }], mapchange: [{\n                type: Output\n            }], yamousedown: [{\n                type: Output\n            }], yamouseenter: [{\n                type: Output\n            }], yamouseleave: [{\n                type: Output\n            }], yamousemove: [{\n                type: Output\n            }], yamouseup: [{\n                type: Output\n            }], multitouchend: [{\n                type: Output\n            }], multitouchmove: [{\n                type: Output\n            }], multitouchstart: [{\n                type: Output\n            }], optionschange: [{\n                type: Output\n            }], overlaychange: [{\n                type: Output\n            }], parentchange: [{\n                type: Output\n            }], propertieschange: [{\n                type: Output\n            }], yawheel: [{\n                type: Output\n            }] } });\n\n/**\n * The `ya-placemark` directive wraps `ymaps.Placemark` class from the Yandex.Maps API.\n * You can configure it via the directive's inputs.\n * Events can be bound using the outputs of the directive.\n *\n * <example-url>https://stackblitz.com/edit/custom-placemark?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.751952, 37.600739]\">\n *   <ya-placemark [geometry]=\"[55.751952, 37.600739]\"></ya-placemark>\n * </ya-map>\n * ```\n */\nclass YaPlacemarkDirective {\n    constructor(_ngZone, _yaMapComponent) {\n        this._ngZone = _ngZone;\n        this._yaMapComponent = _yaMapComponent;\n        this._sub = new Subscription();\n        this._eventManager = new EventManager(this._ngZone);\n        /**\n         * Placemark instance is added in a Map.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * Closing the balloon.\n         */\n        this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n        /**\n         * Opening a balloon on a map.\n         */\n        this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n        /**\n         * Event preceding the \"drag\" event.\n         */\n        this.beforedrag = this._eventManager.getLazyEmitter('beforedrag');\n        /**\n         * Event preceding the \"dragstart\" event.\n         */\n        this.beforedragstart = this._eventManager.getLazyEmitter('beforedragstart');\n        /**\n         * Single left-click on the object.\n         */\n        this.yaclick = this._eventManager.getLazyEmitter('click');\n        /**\n         * Calls the element's context menu.\n         */\n        this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n        /**\n         * Double left-click on the object.\n         */\n        this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * Dragging a geo object.\n         */\n        this.yadrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * End of geo object dragging.\n         */\n        this.yadragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * Start of geo object dragging.\n         */\n        this.yadragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * Change in the state of the editor for the geo object's geometry.\n         */\n        this.editorstatechange = this._eventManager.getLazyEmitter('editorstatechange');\n        /**\n         * Change to the geo object geometry\n         */\n        this.geometrychange = this._eventManager.getLazyEmitter('geometrychange');\n        /**\n         * Closing the hint.\n         */\n        this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n        /**\n         * Opening a hint on a map.\n         */\n        this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n        /**\n         * Map reference changed.\n         */\n        this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n        /**\n         * Pressing the mouse button over the object.\n         */\n        this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * Pointing the cursor at the object.\n         */\n        this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n        /**\n         * Moving the cursor off of the object.\n         */\n        this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n        /**\n         * Moving the cursor over the object.\n         */\n        this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * Letting go of the mouse button over an object.\n         */\n        this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * End of multitouch.\n         */\n        this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n        /**\n         * Repeating event during multitouch.\n         */\n        this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n        /**\n         * Start of multitouch.\n         */\n        this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n        /**\n         * Change to the object options.\n         */\n        this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n        /**\n         * Change to the geo object overlay.\n         */\n        this.overlaychange = this._eventManager.getLazyEmitter('overlaychange');\n        /**\n         * The parent object reference changed.\n         */\n        this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n        /**\n         * Change to the geo object data.\n         */\n        this.propertieschange = this._eventManager.getLazyEmitter('propertieschange');\n        /**\n         * Mouse wheel scrolling.\n         */\n        this.yawheel = this._eventManager.getLazyEmitter('wheel');\n    }\n    /**\n     * Handles input changes and passes them in API.\n     * @param changes\n     */\n    ngOnChanges(changes) {\n        var _a;\n        const { placemark } = this;\n        if (placemark) {\n            const { geometry, properties, options } = changes;\n            if (geometry) {\n                (_a = placemark.geometry) === null || _a === void 0 ? void 0 : _a.setCoordinates(geometry.currentValue);\n            }\n            if (properties) {\n                placemark.properties.set(properties.currentValue);\n            }\n            if (options) {\n                placemark.options.set(options.currentValue);\n            }\n        }\n    }\n    ngOnInit() {\n        if (this._yaMapComponent.isBrowser) {\n            const sub = this._yaMapComponent.map$.subscribe((map) => {\n                if (map) {\n                    const placemark = this._createPlacemark();\n                    this.placemark = placemark;\n                    map.geoObjects.add(placemark);\n                    this._eventManager.setTarget(placemark);\n                    this._ngZone.run(() => this.ready.emit({ ymaps, target: placemark }));\n                }\n            });\n            this._sub.add(sub);\n        }\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        if (this.placemark) {\n            (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this.placemark);\n            this._eventManager.destroy();\n        }\n        this._sub.unsubscribe();\n    }\n    /**\n     * Creates a placemark.\n     */\n    _createPlacemark() {\n        return new ymaps.Placemark(this.geometry, this.properties, this.options);\n    }\n}\nYaPlacemarkDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaPlacemarkDirective, deps: [{ token: i0.NgZone }, { token: YaMapComponent }], target: i0.ɵɵFactoryTarget.Directive });\nYaPlacemarkDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: YaPlacemarkDirective, selector: \"ya-placemark\", inputs: { geometry: \"geometry\", properties: \"properties\", options: \"options\" }, outputs: { ready: \"ready\", balloonclose: \"balloonclose\", balloonopen: \"balloonopen\", beforedrag: \"beforedrag\", beforedragstart: \"beforedragstart\", yaclick: \"yaclick\", yacontextmenu: \"yacontextmenu\", yadblclick: \"yadblclick\", yadrag: \"yadrag\", yadragend: \"yadragend\", yadragstart: \"yadragstart\", editorstatechange: \"editorstatechange\", geometrychange: \"geometrychange\", hintclose: \"hintclose\", hintopen: \"hintopen\", mapchange: \"mapchange\", yamousedown: \"yamousedown\", yamouseenter: \"yamouseenter\", yamouseleave: \"yamouseleave\", yamousemove: \"yamousemove\", yamouseup: \"yamouseup\", multitouchend: \"multitouchend\", multitouchmove: \"multitouchmove\", multitouchstart: \"multitouchstart\", optionschange: \"optionschange\", overlaychange: \"overlaychange\", parentchange: \"parentchange\", propertieschange: \"propertieschange\", yawheel: \"yawheel\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaPlacemarkDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ya-placemark',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: YaMapComponent }]; }, propDecorators: { geometry: [{\n                type: Input\n            }], properties: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], balloonclose: [{\n                type: Output\n            }], balloonopen: [{\n                type: Output\n            }], beforedrag: [{\n                type: Output\n            }], beforedragstart: [{\n                type: Output\n            }], yaclick: [{\n                type: Output\n            }], yacontextmenu: [{\n                type: Output\n            }], yadblclick: [{\n                type: Output\n            }], yadrag: [{\n                type: Output\n            }], yadragend: [{\n                type: Output\n            }], yadragstart: [{\n                type: Output\n            }], editorstatechange: [{\n                type: Output\n            }], geometrychange: [{\n                type: Output\n            }], hintclose: [{\n                type: Output\n            }], hintopen: [{\n                type: Output\n            }], mapchange: [{\n                type: Output\n            }], yamousedown: [{\n                type: Output\n            }], yamouseenter: [{\n                type: Output\n            }], yamouseleave: [{\n                type: Output\n            }], yamousemove: [{\n                type: Output\n            }], yamouseup: [{\n                type: Output\n            }], multitouchend: [{\n                type: Output\n            }], multitouchmove: [{\n                type: Output\n            }], multitouchstart: [{\n                type: Output\n            }], optionschange: [{\n                type: Output\n            }], overlaychange: [{\n                type: Output\n            }], parentchange: [{\n                type: Output\n            }], propertieschange: [{\n                type: Output\n            }], yawheel: [{\n                type: Output\n            }] } });\n\n/**\n * The `ya-clusterer` component wraps `ymaps.Clusterer` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/placemark-clusterer?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-clusterer [options]=\"{ minClusterSize: 5 }\">\n *     <ya-placemark [geometry]=\"[55.74, 37.5]\"></ya-placemark>\n *     <ya-placemark [geometry]=\"[55.64, 37.46]\"></ya-placemark>\n *     <ya-placemark [geometry]=\"[55.75, 37.38]\"></ya-placemark>\n *\n *     <ya-geoobject\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.81, 37.4] } }\"\n *      ></ya-geoobject>\n *\n *     <ya-geoobject\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.7, 37.39] } }\"\n *      ></ya-geoobject>\n *   </ya-clusterer>\n * </ya-map>\n * ```\n */\nclass YaClustererComponent {\n    constructor(_ngZone, _yaMapComponent) {\n        this._ngZone = _ngZone;\n        this._yaMapComponent = _yaMapComponent;\n        this._sub = new Subscription();\n        this._eventManager = new EventManager(this._ngZone);\n        /**\n         * Clusterer instance is added in a Map.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * Closing the hint.\n         */\n        this.hintclose = this._eventManager.getLazyEmitter('hintclose');\n        /**\n         * Opening a hint on a map.\n         */\n        this.hintopen = this._eventManager.getLazyEmitter('hintopen');\n        /**\n         * Map reference changed.\n         */\n        this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n        /**\n         * Change to the object options.\n         */\n        this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n        /**\n         * The parent object reference changed.\n         */\n        this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n    }\n    /**\n     * Handles input changes and passes them in API.\n     * @param changes\n     */\n    ngOnChanges(changes) {\n        const clusterer = this._clusterer;\n        if (clusterer) {\n            const { options } = changes;\n            if (options) {\n                clusterer.options.set(options.currentValue);\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (this._yaMapComponent.isBrowser) {\n            const sub = this._yaMapComponent.map$.subscribe((map) => {\n                if (map) {\n                    const clusterer = this._createClusterer();\n                    this._clusterer = clusterer;\n                    map.geoObjects.add(clusterer);\n                    this._eventManager.setTarget(clusterer);\n                    this._watchForContentChanges(clusterer);\n                    this._ngZone.run(() => this.ready.emit({ ymaps, target: clusterer }));\n                }\n            });\n            this._sub.add(sub);\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._sub.unsubscribe();\n    }\n    /**\n     * Creates Clusterer.\n     */\n    _createClusterer() {\n        return new ymaps.Clusterer(this.options);\n    }\n    _watchForContentChanges(clusterer) {\n        /**\n         * Adds new Placemarks to the clusterer on changes.\n         */\n        const currentPlacemarks = new Set();\n        this._getInternalPlacemarks(this._placemarks.toArray()).forEach((placemark) => {\n            currentPlacemarks.add(placemark);\n            clusterer.add(placemark);\n        });\n        const placemarksSub = this._placemarks.changes.subscribe((placemarkDirectives) => {\n            const newPlacemarks = new Set(this._getInternalPlacemarks(placemarkDirectives));\n            const difference = this._getDifference(newPlacemarks, currentPlacemarks);\n            clusterer.add(difference.toAdd);\n            clusterer.remove(difference.toRemove);\n        });\n        this._sub.add(placemarksSub);\n        /**\n         * Adds new GeoObjects to the clusterer on changes.\n         */\n        const currentGeoObjects = new Set();\n        this._getInternalGeoObjects(this._geoObjects.toArray()).forEach((geoObject) => {\n            currentGeoObjects.add(geoObject);\n            clusterer.add(geoObject);\n        });\n        const geoObjectsSub = this._geoObjects.changes.subscribe((geoObjectDirectives) => {\n            const newGeoObjects = new Set(this._getInternalGeoObjects(geoObjectDirectives));\n            const difference = this._getDifference(newGeoObjects, currentGeoObjects);\n            clusterer.add(difference.toAdd);\n            clusterer.remove(difference.toRemove);\n        });\n        this._sub.add(geoObjectsSub);\n    }\n    /**\n     * Determines what should be added/removed in current set to equal new set\n     *\n     * @param newSet\n     * @param currentSet\n     */\n    _getDifference(newSet, currentSet) {\n        const toAdd = [];\n        const toRemove = [];\n        newSet.forEach((component) => {\n            if (!currentSet.has(component)) {\n                toAdd.push(component);\n                currentSet.add(component);\n            }\n        });\n        currentSet.forEach((component) => {\n            if (!newSet.has(component)) {\n                toRemove.push(component);\n                currentSet.delete(component);\n            }\n        });\n        return {\n            toAdd,\n            toRemove,\n        };\n    }\n    _getInternalPlacemarks(placemarks) {\n        return placemarks\n            .filter((component) => !!component.placemark)\n            .map((component) => component.placemark);\n    }\n    _getInternalGeoObjects(geoObjects) {\n        return geoObjects\n            .filter((component) => !!component.geoObject)\n            .map((component) => component.geoObject);\n    }\n}\nYaClustererComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaClustererComponent, deps: [{ token: i0.NgZone }, { token: YaMapComponent }], target: i0.ɵɵFactoryTarget.Component });\nYaClustererComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: YaClustererComponent, selector: \"ya-clusterer\", inputs: { options: \"options\" }, outputs: { ready: \"ready\", hintclose: \"hintclose\", hintopen: \"hintopen\", mapchange: \"mapchange\", optionschange: \"optionschange\", parentchange: \"parentchange\" }, queries: [{ propertyName: \"_placemarks\", predicate: YaPlacemarkDirective }, { propertyName: \"_geoObjects\", predicate: YaGeoObjectDirective }], usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaClustererComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ya-clusterer',\n                    template: '<ng-content></ng-content>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: YaMapComponent }]; }, propDecorators: { _placemarks: [{\n                type: ContentChildren,\n                args: [YaPlacemarkDirective]\n            }], _geoObjects: [{\n                type: ContentChildren,\n                args: [YaGeoObjectDirective]\n            }], options: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], hintclose: [{\n                type: Output\n            }], hintopen: [{\n                type: Output\n            }], mapchange: [{\n                type: Output\n            }], optionschange: [{\n                type: Output\n            }], parentchange: [{\n                type: Output\n            }] } });\n\n/**\n * The `ya-control` component wraps `ymaps.control[YaControlType]` classes from the Yandex.Maps API.\n * You can configure `ymaps.control[YaControlType]` via the component's inputs.\n * API Events can be bound only manually. You can use `ready` event to get an instance.\n *\n * <example-url>https://stackblitz.com/edit/searchcontrol?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-control\n *     type=\"RoutePanel\"\n *     [parameters]=\"{ options: { float: 'right' } }\"\n *   ></ya-control>\n * </ya-map>\n * ```\n */\nclass YaControlDirective {\n    constructor(_ngZone, _yaMapComponent) {\n        this._ngZone = _ngZone;\n        this._yaMapComponent = _yaMapComponent;\n        this._sub = new Subscription();\n        /**\n         * Control instance is added in a Map.\n         */\n        this.ready = new EventEmitter();\n    }\n    ngOnChanges() {\n        if (this._control) {\n            console.warn('Control does not support dynamic configuration. You can config it manually using ymaps or recreate the component with new configuration');\n        }\n    }\n    ngOnInit() {\n        if (this._yaMapComponent.isBrowser) {\n            const sub = this._yaMapComponent.map$.subscribe((map) => {\n                if (map) {\n                    const control = new ymaps.control[this.type](this.parameters);\n                    this._control = control;\n                    /**\n                     * RoutePanel ignores state in parameters. API bug\n                     */\n                    if (control instanceof ymaps.control.RoutePanel &&\n                        this.parameters &&\n                        this.parameters.state) {\n                        control.routePanel.state.set(Object.assign({}, this.parameters.state));\n                    }\n                    map.controls.add(control);\n                    this._ngZone.run(() => this.ready.emit({ ymaps, target: control }));\n                }\n            });\n            this._sub.add(sub);\n        }\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        if (this._control) {\n            (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.controls.remove(this._control);\n        }\n    }\n}\nYaControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaControlDirective, deps: [{ token: i0.NgZone }, { token: YaMapComponent }], target: i0.ɵɵFactoryTarget.Directive });\nYaControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: YaControlDirective, selector: \"ya-control\", inputs: { type: \"type\", parameters: \"parameters\" }, outputs: { ready: \"ready\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaControlDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ya-control',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: YaMapComponent }]; }, propDecorators: { type: [{\n                type: Input\n            }], parameters: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }] } });\n\n/**\n * The `ya-multiroute` component wraps `ymaps.multiRouter.MultiRoute` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/multiroute-pedestrian?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-multiroute\n *     [referencePoints]=\"[[55.751952, 37.600739], 'Красные ворота, Москва']\"\n *     [model]=\"{ params: { routingMode: 'pedestrian' } }\"\n *   ></ya-multiroute>\n * </ya-map>\n * ```\n */\nclass YaMultirouteDirective {\n    constructor(_ngZone, _yaMapComponent) {\n        this._ngZone = _ngZone;\n        this._yaMapComponent = _yaMapComponent;\n        this._sub = new Subscription();\n        this._eventManager = new EventManager(this._ngZone);\n        /**\n         * Multiroute instance is added in a Map.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * Change to the active route.\n         */\n        this.activeroutechange = this._eventManager.getLazyEmitter('activeroutechange');\n        /**\n         * Closing the balloon.\n         */\n        this.balloonclose = this._eventManager.getLazyEmitter('balloonclose');\n        /**\n         * Opening a balloon on a map.\n         */\n        this.balloonopen = this._eventManager.getLazyEmitter('balloonopen');\n        /**\n         * The event occurs at the time of setting the map center and its zoom level for optimal display of the multi-route.\n         */\n        this.boundsautoapply = this._eventManager.getLazyEmitter('boundsautoapply');\n        /**\n         * Changing coordinates of the geographical area covering the multi-route.\n         */\n        this.boundschange = this._eventManager.getLazyEmitter('boundschange');\n        /**\n         * Single left-click on the object.\n         */\n        this.yaclick = this._eventManager.getLazyEmitter('click');\n        /**\n         * Calls the element's context menu.\n         */\n        this.yacontextmenu = this._eventManager.getLazyEmitter('contextmenu');\n        /**\n         * Double left-click on the object.\n         */\n        this.yadblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * Change to the geo object geometry.\n         */\n        this.geometrychange = this._eventManager.getLazyEmitter('geometrychange');\n        /**\n         * Map reference changed.\n         */\n        this.mapchange = this._eventManager.getLazyEmitter('mapchange');\n        /**\n         * Pressing the mouse button over the object.\n         */\n        this.yamousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * Pointing the cursor at the object.\n         */\n        this.yamouseenter = this._eventManager.getLazyEmitter('mouseenter');\n        /**\n         * Moving the cursor off of the object.\n         */\n        this.yamouseleave = this._eventManager.getLazyEmitter('mouseleave');\n        /**\n         * Moving the cursor over the object.\n         */\n        this.yamousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * Letting go of the mouse button over an object.\n         */\n        this.yamouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * End of multitouch.\n         */\n        this.multitouchend = this._eventManager.getLazyEmitter('multitouchend');\n        /**\n         * Repeating event during multitouch.\n         */\n        this.multitouchmove = this._eventManager.getLazyEmitter('multitouchmove');\n        /**\n         * Start of multitouch.\n         */\n        this.multitouchstart = this._eventManager.getLazyEmitter('multitouchstart');\n        /**\n         * Change to the object options.\n         */\n        this.optionschange = this._eventManager.getLazyEmitter('optionschange');\n        /**\n         * Change to the geo object overlay.\n         */\n        this.overlaychange = this._eventManager.getLazyEmitter('overlaychange');\n        /**\n         * The parent object reference changed.\n         */\n        this.parentchange = this._eventManager.getLazyEmitter('parentchange');\n        /**\n         * Changing pixel coordinates of the area covering the multi-route.\n         */\n        this.pixelboundschange = this._eventManager.getLazyEmitter('pixelboundschange');\n        /**\n         * Change to the geo object data.\n         */\n        this.propertieschange = this._eventManager.getLazyEmitter('propertieschange');\n        /**\n         * Updating the multi-route.\n         */\n        this.update = this._eventManager.getLazyEmitter('update');\n        /**\n         * Mouse wheel scrolling.\n         */\n        this.yawheel = this._eventManager.getLazyEmitter('wheel');\n    }\n    /**\n     * Handles input changes and passes them in API.\n     * @param changes\n     */\n    ngOnChanges(changes) {\n        const multiroute = this._multiroute;\n        if (multiroute) {\n            const { referencePoints, model, options } = changes;\n            if (model) {\n                this._setModel(model.currentValue, multiroute);\n            }\n            if (referencePoints) {\n                multiroute.model.setReferencePoints(referencePoints.currentValue);\n            }\n            if (options) {\n                multiroute.options.set(options.currentValue);\n            }\n        }\n    }\n    ngOnInit() {\n        if (this._yaMapComponent.isBrowser) {\n            const sub = this._yaMapComponent.map$.subscribe((map) => {\n                if (map) {\n                    const multiroute = this._createMultiroute();\n                    this._multiroute = multiroute;\n                    map.geoObjects.add(multiroute);\n                    this._eventManager.setTarget(multiroute);\n                    this._ngZone.run(() => this.ready.emit({ ymaps, target: multiroute }));\n                }\n            });\n            this._sub.add(sub);\n        }\n    }\n    ngOnDestroy() {\n        var _a, _b;\n        if (this._multiroute) {\n            (_b = (_a = this._yaMapComponent) === null || _a === void 0 ? void 0 : _a.map$.value) === null || _b === void 0 ? void 0 : _b.geoObjects.remove(this._multiroute);\n            this._eventManager.destroy();\n        }\n        this._sub.unsubscribe();\n    }\n    /**\n     * Destructs state and passes them in API.\n     * @param model\n     * @param multiroute\n     */\n    _setModel(model, multiroute) {\n        const { referencePoints, params } = model;\n        if (referencePoints) {\n            multiroute.model.setReferencePoints(referencePoints);\n        }\n        if (params) {\n            multiroute.model.setParams(params);\n        }\n    }\n    /**\n     * Creates Multiroute.\n     */\n    _createMultiroute() {\n        return new ymaps.multiRouter.MultiRoute(this._combineModel(), this.options);\n    }\n    /**\n     * Combines the model and reference points into single object\n     */\n    _combineModel() {\n        const model = (this.model || {});\n        return Object.assign(Object.assign({}, model), { referencePoints: this.referencePoints || model.referencePoints });\n    }\n}\nYaMultirouteDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaMultirouteDirective, deps: [{ token: i0.NgZone }, { token: YaMapComponent }], target: i0.ɵɵFactoryTarget.Directive });\nYaMultirouteDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: YaMultirouteDirective, selector: \"ya-multiroute\", inputs: { referencePoints: \"referencePoints\", model: \"model\", options: \"options\" }, outputs: { ready: \"ready\", activeroutechange: \"activeroutechange\", balloonclose: \"balloonclose\", balloonopen: \"balloonopen\", boundsautoapply: \"boundsautoapply\", boundschange: \"boundschange\", yaclick: \"yaclick\", yacontextmenu: \"yacontextmenu\", yadblclick: \"yadblclick\", geometrychange: \"geometrychange\", mapchange: \"mapchange\", yamousedown: \"yamousedown\", yamouseenter: \"yamouseenter\", yamouseleave: \"yamouseleave\", yamousemove: \"yamousemove\", yamouseup: \"yamouseup\", multitouchend: \"multitouchend\", multitouchmove: \"multitouchmove\", multitouchstart: \"multitouchstart\", optionschange: \"optionschange\", overlaychange: \"overlaychange\", parentchange: \"parentchange\", pixelboundschange: \"pixelboundschange\", propertieschange: \"propertieschange\", update: \"update\", yawheel: \"yawheel\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaMultirouteDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ya-multiroute',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: YaMapComponent }]; }, propDecorators: { referencePoints: [{\n                type: Input\n            }], model: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], activeroutechange: [{\n                type: Output\n            }], balloonclose: [{\n                type: Output\n            }], balloonopen: [{\n                type: Output\n            }], boundsautoapply: [{\n                type: Output\n            }], boundschange: [{\n                type: Output\n            }], yaclick: [{\n                type: Output\n            }], yacontextmenu: [{\n                type: Output\n            }], yadblclick: [{\n                type: Output\n            }], geometrychange: [{\n                type: Output\n            }], mapchange: [{\n                type: Output\n            }], yamousedown: [{\n                type: Output\n            }], yamouseenter: [{\n                type: Output\n            }], yamouseleave: [{\n                type: Output\n            }], yamousemove: [{\n                type: Output\n            }], yamouseup: [{\n                type: Output\n            }], multitouchend: [{\n                type: Output\n            }], multitouchmove: [{\n                type: Output\n            }], multitouchstart: [{\n                type: Output\n            }], optionschange: [{\n                type: Output\n            }], overlaychange: [{\n                type: Output\n            }], parentchange: [{\n                type: Output\n            }], pixelboundschange: [{\n                type: Output\n            }], propertieschange: [{\n                type: Output\n            }], update: [{\n                type: Output\n            }], yawheel: [{\n                type: Output\n            }] } });\n\n/**\n * The `ya-panorama` component wraps `ymaps.panorama.Player` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/panorama?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map>\n *   <ya-panorama [point]=\"[59.938557, 30.316198]\" layer=\"yandex#airPanorama\"></ya-panorama>\n * </ya-map>\n * ```\n */\nclass YaPanoramaDirective {\n    constructor(_ngZone, _yaMapComponent) {\n        this._ngZone = _ngZone;\n        this._yaMapComponent = _yaMapComponent;\n        this._sub = new Subscription();\n        this._eventManager = new EventManager(this._ngZone);\n        /**\n         * Panorama instance is created.\n         */\n        this.ready = new EventEmitter();\n        /**\n         * The player was closed by the user or destroyed using the panorama.Player.destroy method.\n         */\n        this.destroy = this._eventManager.getLazyEmitter('destroy');\n        /**\n         * The view direction changed.\n         */\n        this.directionchange = this._eventManager.getLazyEmitter('directionchange');\n        /**\n         * An error occurred during operation of the player. The user will be shown the appropriate screen.\n         */\n        this.yaerror = this._eventManager.getLazyEmitter('error');\n        /**\n         * The panorama player switched to full-screen mode.\n         */\n        this.fullscreenenter = this._eventManager.getLazyEmitter('fullscreenenter');\n        /**\n         * The panorama player exited full-screen mode.\n         */\n        this.fullscreenexit = this._eventManager.getLazyEmitter('fullscreenexit');\n        /**\n         * The user clicked on an expanded marker.\n         */\n        this.markercollapse = this._eventManager.getLazyEmitter('markercollapse');\n        /**\n         * The user clicked on a collapsed marker.\n         */\n        this.markerexpand = this._eventManager.getLazyEmitter('markerexpand');\n        /**\n         * The user's cursor hovered over a marker.\n         */\n        this.markermouseenter = this._eventManager.getLazyEmitter('markermouseenter');\n        /**\n         * The user's cursor left a marker.\n         */\n        this.markermouseleave = this._eventManager.getLazyEmitter('markermouseleave');\n        /**\n         * The open panorama changed.\n         */\n        this.panoramachange = this._eventManager.getLazyEmitter('panoramachange');\n        /**\n         * The size of the viewport has been changed.\n         */\n        this.spanchange = this._eventManager.getLazyEmitter('spanchange');\n    }\n    /**\n     * Handles input changes and passes them in API.\n     * @param changes\n     */\n    ngOnChanges(changes) {\n        const player = this._player;\n        if (player) {\n            const { point, layer, options } = changes;\n            /**\n             * player.moveTo resets values to default if any of them isn't passed.\n             * That's why we use value from currentValue OR previous value from input.\n             * With that logic it's possible to pass only point, layer or options.\n             */\n            if (point || layer) {\n                const combinedPoint = (point === null || point === void 0 ? void 0 : point.currentValue) || this.point;\n                const combinedLayer = (layer === null || layer === void 0 ? void 0 : layer.currentValue) || this.layer;\n                player.moveTo(combinedPoint, { layer: combinedLayer });\n            }\n            if (options) {\n                this._setOptions(options.currentValue, player);\n            }\n        }\n    }\n    ngOnInit() {\n        if (this._yaMapComponent.isBrowser) {\n            const panorama$ = this._yaMapComponent.map$.pipe(filter((m) => Boolean(m)), switchMap((m) => {\n                /**\n                 * Map and panorama use the same container, so need to destroy/remove map\n                 */\n                m.destroy();\n                return this._createPanorama();\n            }));\n            const sub = panorama$.subscribe((panorama) => {\n                const { id } = this._yaMapComponent.container.nativeElement;\n                const player = new ymaps.panorama.Player(id, panorama, this.options);\n                this._player = player;\n                this._eventManager.setTarget(player);\n                this._ngZone.run(() => this.ready.emit({ ymaps, target: player }));\n            });\n            this._sub.add(sub);\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._sub.unsubscribe();\n    }\n    /**\n     * Destructs state and passes it in API.\n     * @param options\n     * @param player\n     */\n    _setOptions(options, player) {\n        const { autoFitToViewport, controls, direction, hotkeysEnabled, span, scrollZoomBehavior, suppressMapOpenBlock, } = options;\n        if (autoFitToViewport ||\n            controls ||\n            hotkeysEnabled ||\n            scrollZoomBehavior ||\n            suppressMapOpenBlock) {\n            console.warn('Only direction and span can be set after entity init. To set other options, you should recreate a Panorama with new options');\n        }\n        if (direction) {\n            player.setDirection(direction);\n        }\n        if (span) {\n            player.setSpan(span);\n        }\n    }\n    /**\n     * Searches for a panorama and returns first\n     */\n    _createPanorama() {\n        return from(ymaps.panorama.locate(this.point, { layer: this.layer })).pipe(map((panoramas) => panoramas[0]));\n    }\n}\nYaPanoramaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaPanoramaDirective, deps: [{ token: i0.NgZone }, { token: YaMapComponent }], target: i0.ɵɵFactoryTarget.Directive });\nYaPanoramaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: YaPanoramaDirective, selector: \"ya-panorama\", inputs: { point: \"point\", layer: \"layer\", options: \"options\" }, outputs: { ready: \"ready\", destroy: \"destroy\", directionchange: \"directionchange\", yaerror: \"yaerror\", fullscreenenter: \"fullscreenenter\", fullscreenexit: \"fullscreenexit\", markercollapse: \"markercollapse\", markerexpand: \"markerexpand\", markermouseenter: \"markermouseenter\", markermouseleave: \"markermouseleave\", panoramachange: \"panoramachange\", spanchange: \"spanchange\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaPanoramaDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ya-panorama',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: YaMapComponent }]; }, propDecorators: { point: [{\n                type: Input\n            }], layer: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], destroy: [{\n                type: Output\n            }], directionchange: [{\n                type: Output\n            }], yaerror: [{\n                type: Output\n            }], fullscreenenter: [{\n                type: Output\n            }], fullscreenexit: [{\n                type: Output\n            }], markercollapse: [{\n                type: Output\n            }], markerexpand: [{\n                type: Output\n            }], markermouseenter: [{\n                type: Output\n            }], markermouseleave: [{\n                type: Output\n            }], panoramachange: [{\n                type: Output\n            }], spanchange: [{\n                type: Output\n            }] } });\n\nclass AngularYandexMapsModule {\n    /**\n     * Please use this method when you register the module at the root level\n     * @param config\n     */\n    static forRoot(config) {\n        return {\n            ngModule: AngularYandexMapsModule,\n            providers: [{ provide: YA_CONFIG, useValue: config }],\n        };\n    }\n}\nAngularYandexMapsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: AngularYandexMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularYandexMapsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: AngularYandexMapsModule, declarations: [YaClustererComponent,\n        YaControlDirective,\n        YaGeoObjectDirective,\n        YaMapComponent,\n        YaMultirouteDirective,\n        YaPanoramaDirective,\n        YaPlacemarkDirective], exports: [YaClustererComponent,\n        YaControlDirective,\n        YaGeoObjectDirective,\n        YaMapComponent,\n        YaMultirouteDirective,\n        YaPanoramaDirective,\n        YaPlacemarkDirective] });\nAngularYandexMapsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: AngularYandexMapsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: AngularYandexMapsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        YaClustererComponent,\n                        YaControlDirective,\n                        YaGeoObjectDirective,\n                        YaMapComponent,\n                        YaMultirouteDirective,\n                        YaPanoramaDirective,\n                        YaPlacemarkDirective,\n                    ],\n                    exports: [\n                        YaClustererComponent,\n                        YaControlDirective,\n                        YaGeoObjectDirective,\n                        YaMapComponent,\n                        YaMultirouteDirective,\n                        YaPanoramaDirective,\n                        YaPlacemarkDirective,\n                    ],\n                }]\n        }] });\n\n/**\n * The `YaGeocoder` service wraps `ymaps.geocode` static function from the Yandex.Maps API.\n *\n * @example\n * ```ts\n * import { YaGeocoderService } from 'angular8-yandex-maps';\n *\n * export class AppComponent {\n *   constructor(private yaGeocoderService: YaGeocoderService) {\n *     this.yaGeocoderService.geocode('Moscow')\n *       .subscribe(v => console.log(v))\n *   }\n * }\n * ```\n */\nclass YaGeocoderService {\n    constructor(_ngZone, _yaApiLoaderService) {\n        this._ngZone = _ngZone;\n        this._yaApiLoaderService = _yaApiLoaderService;\n    }\n    /**\n     * Processes geocoding requests.\n     * @param request The address for which coordinates need to be obtained (forward geocoding), or the coordinates for which the address needs to be determined (reverse geocoding).\n     * @param options Options.\n     */\n    geocode(request, options) {\n        return this._yaApiLoaderService.load().pipe(switchMap(() => from(ymaps.geocode(request, options))), switchMap((result) => new Observable((observer) => {\n            this._ngZone.run(() => {\n                observer.next(result);\n                observer.complete();\n            });\n        })));\n    }\n}\nYaGeocoderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaGeocoderService, deps: [{ token: i0.NgZone }, { token: YaApiLoaderService }], target: i0.ɵɵFactoryTarget.Injectable });\nYaGeocoderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaGeocoderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: YaGeocoderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: YaApiLoaderService }]; } });\n\n/*\n * Public API Surface of angular8-yandex-maps\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularYandexMapsModule, YA_CONFIG, YaApiLoaderService, YaClustererComponent, YaControlDirective, YaGeoObjectDirective, YaGeocoderService, YaMapComponent, YaMultirouteDirective, YaPanoramaDirective, YaPlacemarkDirective };\n"]},"metadata":{},"sourceType":"module"}