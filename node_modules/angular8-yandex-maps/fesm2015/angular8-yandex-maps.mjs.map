{"version":3,"file":"angular8-yandex-maps.mjs","sources":["../../../projects/angular8-yandex-maps/src/lib/services/ya-api-loader/ya-api-loader.service.ts","../../../projects/angular8-yandex-maps/src/lib/event-manager.ts","../../../projects/angular8-yandex-maps/src/lib/utils/generate-random-id.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-map/ya-map.component.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-geoobject/ya-geoobject.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-placemark/ya-placemark.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-clusterer/ya-clusterer.component.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-control/ya-control.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-multiroute/ya-multiroute.directive.ts","../../../projects/angular8-yandex-maps/src/lib/components/ya-panorama/ya-panorama.directive.ts","../../../projects/angular8-yandex-maps/src/lib/angular-yandex-maps.module.ts","../../../projects/angular8-yandex-maps/src/lib/services/ya-geocoder/ya-geocoder.service.ts","../../../projects/angular8-yandex-maps/src/public-api.ts","../../../projects/angular8-yandex-maps/src/angular8-yandex-maps.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { from, fromEvent, merge, Observable, throwError } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n\n/**\n * Injection token to specify configuration.\n */\nexport const YA_CONFIG = new InjectionToken<YaConfig>('YA_CONFIG');\n\n/**\n * API loading parameters.\n */\nexport interface YaConfig {\n  /**\n   * API key. You can get a key in the developer's dashboard.\n   */\n  apikey?: string;\n  /**\n   * Locale.\n   */\n  lang?: 'ru_RU' | 'en_US' | 'en_RU' | 'ru_UA' | 'uk_UA' | 'tr_TR';\n  /**\n   * The order for setting geographical coordinates in API functions that accept longitude-latitude input.\n   */\n  coordorder?: 'latlong' | 'longlat';\n  /**\n   * List of modules to load.\n   */\n  load?: string;\n  /**\n   * API loading mode.\n   */\n  mode?: 'release' | 'debug';\n  /**\n   * Use commercial version of the API.\n   */\n  enterprise?: boolean;\n  /**\n   * Version number of the API.\n   */\n  version?: string;\n}\n\n/**\n * The `YaApiLoader` service handles loading of Yandex.Maps API.\n *\n * @example\n * ```ts\n * import { YaApiLoaderService } from 'angular8-yandex-maps';\n *\n * export class AppComponent {\n *   constructor(private yaApiLoaderService: YaApiLoaderService) {\n *     this.yaApiLoaderService.load()\n *       .subscribe(v => console.log(v))\n *   }\n * }\n *```\n *\n * @dynamic\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class YaApiLoaderService {\n  private readonly _config: YaConfig;\n\n  private readonly _defaultConfig: YaConfig = { lang: 'ru_RU' };\n\n  private _script: HTMLScriptElement;\n\n  constructor(\n    @Optional() @Inject(YA_CONFIG) config: YaConfig | null,\n    @Inject(DOCUMENT) private readonly _document: Document,\n  ) {\n    this._config = {\n      ...this._defaultConfig,\n      ...config,\n    };\n  }\n\n  /**\n   * Loads Yandex.Maps API.\n   */\n  load(): Observable<typeof ymaps> {\n    if (window.ymaps) {\n      return from(ymaps.ready()).pipe(map(() => ymaps));\n    }\n\n    if (!this._script) {\n      const script = this._document.createElement('script');\n\n      script.type = 'text/javascript';\n      script.src = this._getScriptSource(this._config);\n      script.id = 'yandexMapsApiScript';\n      script.async = true;\n      script.defer = true;\n\n      this._script = this._document.body.appendChild(script);\n    }\n\n    const load = fromEvent(this._script, 'load').pipe(\n      switchMap(() => from(ymaps.ready()).pipe(map(() => ymaps))),\n    );\n\n    const error = fromEvent(this._script, 'error').pipe(switchMap((e) => throwError(e)));\n\n    return merge(load, error).pipe(take(1));\n  }\n\n  /**\n   * Returns script source by config.\n   * @param config config with parameters that will be added in source\n   * @example\n   * // returns 'https://api-maps.yandex.ru/2.1/?apikey=658f67a2-fd77-42e9-b99e-2bd48c4ccad4&lang=en_US'\n   * getScriptSource({ apikey: '658f67a2-fd77-42e9-b99e-2bd48c4ccad4', lang: 'en_US' })\n   */\n  private _getScriptSource(config: YaConfig): string {\n    const { enterprise, version = '2.1', ...rest } = config;\n    const params = this._convertConfigIntoQueryParams(rest);\n\n    return `https://${enterprise ? 'enterprise.' : ''}api-maps.yandex.ru/${version}/?${params}`;\n  }\n\n  /**\n   * Converts a config into a query string parameters.\n   * @param config object for converting\n   * @example\n   * // returns \"lang=ru_RU&apikey=XXX\"\n   * convertIntoQueryParams({ lang: 'ru_RU', apikey: 'XXX' })\n   */\n  private _convertConfigIntoQueryParams(config: YaConfig): string {\n    return Object.entries(config)\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&');\n  }\n}\n","/**\n * Copied from angular/components/google-maps and edited for Yandex.Maps API.\n * {@link https://github.com/angular/components/blob/master/src/google-maps/map-event-manager.ts}\n */\n\nimport { NgZone } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscriber } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { YaEvent } from './typings/ya-event';\n\n/**\n * @internal\n */\ntype EventManagerTarget = {\n  events: ymaps.IEventManager;\n};\n\n/**\n * Manages event on a Yandex.Maps object, ensuring that events are added only when necessary.\n * @internal\n */\nexport class EventManager {\n  /**\n   * Listeners that were added before the target was set.\n   */\n  private _pending: {\n    observable: Observable<any>;\n    observer: Subscriber<any>;\n  }[] = [];\n\n  private _listeners: {\n    name: string;\n    callback: (e: ymaps.Event) => void;\n    manager: ymaps.IEventManager;\n  }[] = [];\n\n  private readonly _targetStream = new BehaviorSubject<EventManagerTarget | undefined>(undefined);\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * Gets an observable that adds an event listener to the map when a consumer subscribes to it.\n   * @param name\n   */\n  getLazyEmitter(name: string): Observable<YaEvent> {\n    return this._targetStream.pipe(\n      switchMap((target) => {\n        const observable = new Observable<YaEvent>((observer) => {\n          // If the target hasn't been initialized yet, cache the observer so it can be added later.\n          if (!target) {\n            this._pending.push({ observable, observer });\n            return undefined;\n          }\n\n          const callback = (event: ymaps.Event) => {\n            const e = {\n              event,\n              target,\n              ymaps,\n            };\n\n            this._ngZone.run(() => observer.next(e));\n          };\n\n          const listener = target.events.add(name, callback);\n          this._listeners.push({ name, callback, manager: listener });\n\n          // Unsubscribe function\n          return () => listener.remove(name, callback as any);\n        });\n\n        return observable;\n      }),\n    );\n  }\n\n  /**\n   * Sets the current target that the manager should bind events to.\n   * @param target\n   */\n  setTarget(target: EventManagerTarget): void {\n    const currentTarget = this._targetStream.value;\n\n    if (target === currentTarget) {\n      return;\n    }\n\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n\n    this._targetStream.next(target);\n\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach((subscriber) => subscriber.observable.subscribe(subscriber.observer));\n\n    this._pending = [];\n  }\n\n  /**\n   * Destroys the manager and clears the event listeners.\n   */\n  destroy(): void {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n\n  /**\n   * Clears all currently-registered event listeners.\n   */\n  private _clearListeners() {\n    this._listeners.forEach((listener) => {\n      const { name, callback, manager } = listener;\n      manager.remove(name, callback as any);\n    });\n\n    this._listeners = [];\n  }\n}\n","/**\n * Generates a random string based on Date in hexadecimal numeral system\n * @example f175517fa4f3\n * @internal\n */\nexport const generateRandomId = (): string => `f${Number(new Date()).toString(16)}`;\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { EventManager } from '../../event-manager';\nimport { generateRandomId } from '../../utils/generate-random-id';\nimport { YaApiLoaderService } from '../../services/ya-api-loader/ya-api-loader.service';\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\nimport { YaEvent } from '../../typings/ya-event';\n\n/**\n * The `ya-map` component wraps `ymaps.Map` class from the Yandex.Maps API.\n * You can configure the map via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/map-onload-event?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map\n *   [center]=\"[55.751952, 37.600739]\"\n *   [state]=\"{type: 'yandex#satellite'}\"\n * ></ya-map>\n * ```\n */\n@Component({\n  selector: 'ya-map',\n  template: '<div #container></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class YaMapComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild('container') container: ElementRef;\n\n  private readonly _sub = new Subscription();\n\n  private readonly _eventManager = new EventManager(this._ngZone);\n\n  map$ = new BehaviorSubject<ymaps.Map | undefined>(undefined);\n\n  isBrowser: boolean;\n\n  /**\n   * Map center geocoordinates. Default is [0, 0].\n   * Shorthand for [state]=\"{ center: [0, 0] }\".\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Map__param-state.center}\n   */\n  @Input() center: number[];\n\n  /**\n   * Map zoom level. Default level is 10.\n   * Shorthand for [state]=\"{ zoom: 10 }\".\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Map__param-state.zoom}\n   */\n  @Input() zoom: number;\n\n  /**\n   * States for the map.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Mapparam-state}\n   */\n  @Input() state: ymaps.IMapState;\n\n  /**\n   * Options for the map.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Map.html#Mapparam-options}\n   */\n  @Input() options: ymaps.IMapOptions;\n\n  /**\n   * Map instance is created.\n   */\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.Map>> = new EventEmitter<\n    YaReadyEvent<ymaps.Map>\n  >();\n\n  /**\n   * The start of a new smooth map movement.\n   */\n  @Output() actionbegin: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('actionbegin');\n\n  /**\n   * Event that occurs when an action step was prematurely stopped.\n   */\n  @Output() actionbreak: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('actionbreak');\n\n  /**\n   * The end of smooth map movement.\n   */\n  @Output() actionend: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('actionend');\n\n  /**\n   * The start of a new step of smooth movement.\n   */\n  @Output() actiontick: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('actiontick');\n\n  /**\n   * The end of performing a step of smooth movement.\n   */\n  @Output() actiontickcomplete: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('actiontickcomplete');\n\n  /**\n   * Closing the balloon.\n   */\n  @Output() balloonclose: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('balloonclose');\n\n  /**\n   * Opening a balloon on a map.\n   */\n  @Output() balloonopen: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('balloonopen');\n\n  /**\n   * Event for a change to the map viewport.\n   */\n  @Output() boundschange: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('boundschange');\n\n  /**\n   * Single left-click on the object.\n   */\n  @Output() yaclick: Observable<YaEvent<ymaps.Map>> = this._eventManager.getLazyEmitter('click');\n\n  /**\n   * Calls the element's context menu.\n   */\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('contextmenu');\n\n  /**\n   * Double left-click on the object.\n   */\n  @Output() yadblclick: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('dblclick');\n\n  /**\n   * The map was destroyed.\n   */\n  @Output() destroy: Observable<YaEvent<ymaps.Map>> = this._eventManager.getLazyEmitter('destroy');\n\n  /**\n   * Closing the hint.\n   */\n  @Output() hintclose: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('hintclose');\n\n  /**\n   * Opening a hint on a map.\n   */\n  @Output() hintopen: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('hintopen');\n\n  /**\n   * Map margins changed.\n   */\n  @Output() marginchange: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('marginchange');\n\n  /**\n   * Pressing the mouse button over the object.\n   */\n  @Output() yamousedown: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('mousedown');\n\n  /**\n   * Pointing the cursor at the object.\n   */\n  @Output() yamouseenter: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('mouseenter');\n\n  /**\n   * Moving the cursor off of the object.\n   */\n  @Output() yamouseleave: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('mouseleave');\n\n  /**\n   * Moving the cursor over the object.\n   */\n  @Output() yamousemove: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('mousemove');\n\n  /**\n   * Letting go of the mouse button over an object.\n   */\n  @Output() yamouseup: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('mouseup');\n\n  /**\n   * End of multitouch.\n   */\n  @Output() multitouchend: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('multitouchend');\n\n  /**\n   * Repeating event during multitouch.\n   */\n  @Output() multitouchmove: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('multitouchmove');\n\n  /**\n   * Start of multitouch.\n   */\n  @Output() multitouchstart: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('multitouchstart');\n\n  /**\n   * Map options changed.\n   */\n  @Output() optionschange: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('optionschange');\n\n  /**\n   * Map size changed.\n   */\n  @Output() sizechange: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('sizechange');\n\n  /**\n   * The map type changed.\n   */\n  @Output() typechange: Observable<YaEvent<ymaps.Map>> =\n    this._eventManager.getLazyEmitter('typechange');\n\n  /**\n   * Mouse wheel scrolling.\n   */\n  @Output() yawheel: Observable<YaEvent<ymaps.Map>> = this._eventManager.getLazyEmitter('wheel');\n\n  constructor(\n    private readonly _ngZone: NgZone,\n    private readonly _yaApiLoaderService: YaApiLoaderService,\n    /*\n     * We need to use the same type like in an Angular.\n     * \"export declare const PLATFORM_ID: InjectionToken<Object>\"\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    const map = this.map$.value;\n\n    if (map) {\n      const { center, zoom, state, options } = changes;\n\n      if (state) {\n        this._setState(this._combineState(), map);\n      }\n\n      if (center) {\n        map.setCenter(center.currentValue);\n      }\n\n      if (zoom) {\n        map.setZoom(zoom.currentValue);\n      }\n\n      if (options) {\n        map.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    /**\n     * It should be a noop during server-side rendering.\n     */\n    if (this.isBrowser) {\n      const sub = this._yaApiLoaderService.load().subscribe(() => {\n        const id = generateRandomId();\n        const map = this._createMap(id);\n\n        this.map$.next(map);\n        this._eventManager.setTarget(map);\n        this._ngZone.run(() => this.ready.emit({ ymaps, target: map }));\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._eventManager.destroy();\n    this._sub.unsubscribe();\n  }\n\n  /**\n   * Destructs state and passes it in API.\n   * @param state\n   * @param map\n   */\n  private _setState(state: ymaps.IMapState, map: ymaps.Map): void {\n    const { behaviors, bounds, center, controls, margin, type, zoom } = state;\n\n    if (behaviors) {\n      map.behaviors.enable(behaviors);\n    }\n\n    if (bounds) {\n      map.setBounds(bounds);\n    }\n\n    if (center) {\n      map.setCenter(center);\n    }\n\n    if (controls) {\n      controls.forEach((control) => map.controls.add(control));\n    }\n\n    if (margin) {\n      map.margin.setDefaultMargin(margin);\n    }\n\n    if (type) {\n      map.setType(type);\n    }\n\n    if (zoom) {\n      map.setZoom(zoom);\n    }\n  }\n\n  /**\n   * Creates a map.\n   * @param id ID which will be set to the map container.\n   */\n  private _createMap(id: string): ymaps.Map {\n    const containerElem: HTMLElement = this.container.nativeElement;\n    containerElem.setAttribute('id', id);\n    containerElem.style.cssText = 'width: 100%; height: 100%;';\n\n    return new ymaps.Map(id, this._combineState(), this.options || {});\n  }\n\n  /**\n   * Combines the center and zoom into single object.\n   */\n  private _combineState(): ymaps.IMapState {\n    const state = this.state || {};\n\n    return {\n      ...state,\n      center: this.center || state.center || [0, 0],\n      zoom: this.zoom ?? state.zoom ?? 10,\n    };\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { EventManager } from '../../event-manager';\nimport { YaMapComponent } from '../ya-map/ya-map.component';\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\nimport { YaEvent } from '../../typings/ya-event';\n\n/**\n * The `ya-geoobject` component wraps `ymaps.GeoObject` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/geoobject-polygon?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-geoobject\n *     [feature]=\"{ geometry: { type: 'Rectangle', coordinates: [[55.665, 37.66], [55.64,37.53]] } }\"\n *   ></ya-geoobject>\n * </ya-map>\n * ```\n */\n@Directive({\n  selector: 'ya-geoobject',\n})\nexport class YaGeoObjectDirective implements OnInit, OnChanges, OnDestroy {\n  private readonly _sub = new Subscription();\n\n  private readonly _eventManager = new EventManager(this._ngZone);\n\n  geoObject?: ymaps.GeoObject;\n\n  /**\n   * Feature for the GeoObject.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/GeoObject.html#GeoObjectparam-feature}\n   */\n  @Input() feature: ymaps.IGeoObjectFeature;\n\n  /**\n   * Options for the GeoObject.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/GeoObject.html#GeoObjectparam-options}\n   */\n  @Input() options: ymaps.IGeoObjectOptions;\n\n  /**\n   * GeoObject instance is added in a Map.\n   */\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.GeoObject>> = new EventEmitter<\n    YaReadyEvent<ymaps.GeoObject>\n  >();\n\n  /**\n   * Closing the balloon.\n   */\n  @Output() balloonclose: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('balloonclose');\n\n  /**\n   * Opening a balloon on a map.\n   */\n  @Output() balloonopen: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('balloonopen');\n\n  /**\n   * Event preceding the \"drag\" event.\n   */\n  @Output() beforedrag: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('beforedrag');\n\n  /**\n   * Event preceding the \"dragstart\" event.\n   */\n  @Output() beforedragstart: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('beforedragstart');\n\n  /**\n   * Single left-click on the object.\n   */\n  @Output() yaclick: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('click');\n\n  /**\n   * Calls the element's context menu.\n   */\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('contextmenu');\n\n  /**\n   * Double left-click on the object.\n   */\n  @Output() yadblclick: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('dblclick');\n\n  /**\n   * Dragging a geo object.\n   */\n  @Output() yadrag: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('drag');\n\n  /**\n   * End of geo object dragging.\n   */\n  @Output() yadragend: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('dragend');\n\n  /**\n   * Start of geo object dragging.\n   */\n  @Output() yadragstart: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('dragstart');\n\n  /**\n   * Change in the state of the editor for the geo object's geometry.\n   */\n  @Output() editorstatechange: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('editorstatechange');\n\n  /**\n   * Change to the geo object geometry\n   */\n  @Output() geometrychange: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('geometrychange');\n\n  /**\n   * Closing the hint.\n   */\n  @Output() hintclose: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('hintclose');\n\n  /**\n   * Opening a hint on a map.\n   */\n  @Output() hintopen: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('hintopen');\n\n  /**\n   * Map reference changed.\n   */\n  @Output() mapchange: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('mapchange');\n\n  /**\n   * Pressing the mouse button over the object.\n   */\n  @Output() yamousedown: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('mousedown');\n\n  /**\n   * Pointing the cursor at the object.\n   */\n  @Output() yamouseenter: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('mouseenter');\n\n  /**\n   * Moving the cursor off of the object.\n   */\n  @Output() yamouseleave: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('mouseleave');\n\n  /**\n   * Moving the cursor over the object.\n   */\n  @Output() yamousemove: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('mousemove');\n\n  /**\n   * Letting go of the mouse button over an object.\n   */\n  @Output() yamouseup: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('mouseup');\n\n  /**\n   * End of multitouch.\n   */\n  @Output() multitouchend: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('multitouchend');\n\n  /**\n   * Repeating event during multitouch.\n   */\n  @Output() multitouchmove: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('multitouchmove');\n\n  /**\n   * Start of multitouch.\n   */\n  @Output() multitouchstart: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('multitouchstart');\n\n  /**\n   * Change to the object options.\n   */\n  @Output() optionschange: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('optionschange');\n\n  /**\n   * Change to the geo object overlay.\n   */\n  @Output() overlaychange: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('overlaychange');\n\n  /**\n   * The parent object reference changed.\n   */\n  @Output() parentchange: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('parentchange');\n\n  /**\n   * Change to the geo object data.\n   */\n  @Output() propertieschange: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('propertieschange');\n\n  /**\n   * Mouse wheel scrolling.\n   */\n  @Output() yawheel: Observable<YaEvent<ymaps.GeoObject>> =\n    this._eventManager.getLazyEmitter('wheel');\n\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\n\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    const { geoObject } = this;\n\n    if (geoObject) {\n      const { feature, options } = changes;\n\n      if (feature) {\n        this._setFeature(feature.currentValue, geoObject);\n      }\n\n      if (options) {\n        geoObject.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\n        if (map) {\n          const geoObject = this._createGeoObject();\n          this.geoObject = geoObject;\n\n          map.geoObjects.add(geoObject);\n          this._eventManager.setTarget(geoObject);\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: geoObject }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.geoObject) {\n      this._yaMapComponent?.map$.value?.geoObjects.remove(this.geoObject);\n      this._eventManager.destroy();\n    }\n\n    this._sub.unsubscribe();\n  }\n\n  /**\n   * Destructs feature and passes it in API.\n   * @param feature\n   * @param geoObject\n   */\n  private _setFeature(feature: ymaps.IGeoObjectFeature, geoObject: ymaps.GeoObject): void {\n    const { geometry, properties } = feature;\n\n    if (geometry) {\n      console.warn(\n        'The geometry can not be changed after entity init. To set it, you should recreate a GeoObject with new feature.geometry',\n      );\n    }\n\n    if (properties) {\n      geoObject.properties.set(properties);\n    }\n  }\n\n  /**\n   * Creates GeoObject.\n   */\n  private _createGeoObject(): ymaps.GeoObject {\n    return new ymaps.GeoObject(this.feature, this.options);\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { YaMapComponent } from '../ya-map/ya-map.component';\nimport { EventManager } from '../../event-manager';\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\nimport { YaEvent } from '../../typings/ya-event';\n\n/**\n * The `ya-placemark` directive wraps `ymaps.Placemark` class from the Yandex.Maps API.\n * You can configure it via the directive's inputs.\n * Events can be bound using the outputs of the directive.\n *\n * <example-url>https://stackblitz.com/edit/custom-placemark?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.751952, 37.600739]\">\n *   <ya-placemark [geometry]=\"[55.751952, 37.600739]\"></ya-placemark>\n * </ya-map>\n * ```\n */\n@Directive({\n  selector: 'ya-placemark',\n})\nexport class YaPlacemarkDirective implements OnInit, OnChanges, OnDestroy {\n  private readonly _sub = new Subscription();\n\n  private readonly _eventManager = new EventManager(this._ngZone);\n\n  placemark?: ymaps.Placemark;\n\n  /**\n   * Coordinates of the placemark, or a hash describing the geometry, or a reference to the point geometry object.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Placemark.html#Placemark__param-geometry}\n   */\n  @Input() geometry: number[] | object | ymaps.IPointGeometry;\n\n  /**\n   * Properties for the placemark.\n   * {@link https://yandex.com/maps/jsapi/doc/2.1/ref/reference/Placemark-docpage/#Placemarkparam-properties}\n   */\n  @Input() properties: ymaps.IPlacemarkProperties | ymaps.IDataManager;\n\n  /**\n   * Options for the placemark.\n   * {@link https://yandex.com/maps/jsapi/doc/2.1/ref/reference/Placemark-docpage/#Placemarkparam-options}\n   */\n  @Input() options: ymaps.IPlacemarkOptions;\n\n  /**\n   * Placemark instance is added in a Map.\n   */\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.Placemark>> = new EventEmitter<\n    YaReadyEvent<ymaps.Placemark>\n  >();\n\n  /**\n   * Closing the balloon.\n   */\n  @Output() balloonclose: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('balloonclose');\n\n  /**\n   * Opening a balloon on a map.\n   */\n  @Output() balloonopen: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('balloonopen');\n\n  /**\n   * Event preceding the \"drag\" event.\n   */\n  @Output() beforedrag: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('beforedrag');\n\n  /**\n   * Event preceding the \"dragstart\" event.\n   */\n  @Output() beforedragstart: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('beforedragstart');\n\n  /**\n   * Single left-click on the object.\n   */\n  @Output() yaclick: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('click');\n\n  /**\n   * Calls the element's context menu.\n   */\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('contextmenu');\n\n  /**\n   * Double left-click on the object.\n   */\n  @Output() yadblclick: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('dblclick');\n\n  /**\n   * Dragging a geo object.\n   */\n  @Output() yadrag: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('drag');\n\n  /**\n   * End of geo object dragging.\n   */\n  @Output() yadragend: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('dragend');\n\n  /**\n   * Start of geo object dragging.\n   */\n  @Output() yadragstart: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('dragstart');\n\n  /**\n   * Change in the state of the editor for the geo object's geometry.\n   */\n  @Output() editorstatechange: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('editorstatechange');\n\n  /**\n   * Change to the geo object geometry\n   */\n  @Output() geometrychange: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('geometrychange');\n\n  /**\n   * Closing the hint.\n   */\n  @Output() hintclose: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('hintclose');\n\n  /**\n   * Opening a hint on a map.\n   */\n  @Output() hintopen: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('hintopen');\n\n  /**\n   * Map reference changed.\n   */\n  @Output() mapchange: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('mapchange');\n\n  /**\n   * Pressing the mouse button over the object.\n   */\n  @Output() yamousedown: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('mousedown');\n\n  /**\n   * Pointing the cursor at the object.\n   */\n  @Output() yamouseenter: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('mouseenter');\n\n  /**\n   * Moving the cursor off of the object.\n   */\n  @Output() yamouseleave: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('mouseleave');\n\n  /**\n   * Moving the cursor over the object.\n   */\n  @Output() yamousemove: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('mousemove');\n\n  /**\n   * Letting go of the mouse button over an object.\n   */\n  @Output() yamouseup: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('mouseup');\n\n  /**\n   * End of multitouch.\n   */\n  @Output() multitouchend: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('multitouchend');\n\n  /**\n   * Repeating event during multitouch.\n   */\n  @Output() multitouchmove: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('multitouchmove');\n\n  /**\n   * Start of multitouch.\n   */\n  @Output() multitouchstart: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('multitouchstart');\n\n  /**\n   * Change to the object options.\n   */\n  @Output() optionschange: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('optionschange');\n\n  /**\n   * Change to the geo object overlay.\n   */\n  @Output() overlaychange: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('overlaychange');\n\n  /**\n   * The parent object reference changed.\n   */\n  @Output() parentchange: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('parentchange');\n\n  /**\n   * Change to the geo object data.\n   */\n  @Output() propertieschange: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('propertieschange');\n\n  /**\n   * Mouse wheel scrolling.\n   */\n  @Output() yawheel: Observable<YaEvent<ymaps.Placemark>> =\n    this._eventManager.getLazyEmitter('wheel');\n\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\n\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    const { placemark } = this;\n\n    if (placemark) {\n      const { geometry, properties, options } = changes;\n\n      if (geometry) {\n        placemark.geometry?.setCoordinates(geometry.currentValue);\n      }\n\n      if (properties) {\n        placemark.properties.set(properties.currentValue);\n      }\n\n      if (options) {\n        placemark.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\n        if (map) {\n          const placemark = this._createPlacemark();\n          this.placemark = placemark;\n\n          map.geoObjects.add(placemark);\n          this._eventManager.setTarget(placemark);\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: placemark }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.placemark) {\n      this._yaMapComponent?.map$.value?.geoObjects.remove(this.placemark);\n      this._eventManager.destroy();\n    }\n\n    this._sub.unsubscribe();\n  }\n\n  /**\n   * Creates a placemark.\n   */\n  private _createPlacemark(): ymaps.Placemark {\n    return new ymaps.Placemark(this.geometry, this.properties, this.options);\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { YaGeoObjectDirective } from '../ya-geoobject/ya-geoobject.directive';\nimport { YaMapComponent } from '../ya-map/ya-map.component';\nimport { YaPlacemarkDirective } from '../ya-placemark/ya-placemark.directive';\nimport { EventManager } from '../../event-manager';\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\nimport { YaEvent } from '../../typings/ya-event';\n\n/**\n * The `ya-clusterer` component wraps `ymaps.Clusterer` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/placemark-clusterer?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-clusterer [options]=\"{ minClusterSize: 5 }\">\n *     <ya-placemark [geometry]=\"[55.74, 37.5]\"></ya-placemark>\n *     <ya-placemark [geometry]=\"[55.64, 37.46]\"></ya-placemark>\n *     <ya-placemark [geometry]=\"[55.75, 37.38]\"></ya-placemark>\n *\n *     <ya-geoobject\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.81, 37.4] } }\"\n *      ></ya-geoobject>\n *\n *     <ya-geoobject\n *       [feature]=\"{ geometry: { type: 'Point', coordinates: [55.7, 37.39] } }\"\n *      ></ya-geoobject>\n *   </ya-clusterer>\n * </ya-map>\n * ```\n */\n@Component({\n  selector: 'ya-clusterer',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class YaClustererComponent implements AfterContentInit, OnChanges, OnDestroy {\n  @ContentChildren(YaPlacemarkDirective)\n  private readonly _placemarks: QueryList<YaPlacemarkDirective>;\n\n  @ContentChildren(YaGeoObjectDirective)\n  private readonly _geoObjects: QueryList<YaGeoObjectDirective>;\n\n  private readonly _sub = new Subscription();\n\n  private readonly _eventManager = new EventManager(this._ngZone);\n\n  private _clusterer?: ymaps.Clusterer;\n\n  /**\n   * Options for the clusterer.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Clusterer.html#Clusterer__param-options}\n   */\n  @Input() options: ymaps.IClustererOptions;\n\n  /**\n   * Clusterer instance is added in a Map.\n   */\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.Clusterer>> = new EventEmitter<\n    YaReadyEvent<ymaps.Clusterer>\n  >();\n\n  /**\n   * Closing the hint.\n   */\n  @Output() hintclose: Observable<YaEvent<ymaps.Clusterer>> =\n    this._eventManager.getLazyEmitter('hintclose');\n\n  /**\n   * Opening a hint on a map.\n   */\n  @Output() hintopen: Observable<YaEvent<ymaps.Clusterer>> =\n    this._eventManager.getLazyEmitter('hintopen');\n\n  /**\n   * Map reference changed.\n   */\n  @Output() mapchange: Observable<YaEvent<ymaps.Clusterer>> =\n    this._eventManager.getLazyEmitter('mapchange');\n\n  /**\n   * Change to the object options.\n   */\n  @Output() optionschange: Observable<YaEvent<ymaps.Clusterer>> =\n    this._eventManager.getLazyEmitter('optionschange');\n\n  /**\n   * The parent object reference changed.\n   */\n  @Output() parentchange: Observable<YaEvent<ymaps.Clusterer>> =\n    this._eventManager.getLazyEmitter('parentchange');\n\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\n\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    const clusterer = this._clusterer;\n\n    if (clusterer) {\n      const { options } = changes;\n\n      if (options) {\n        clusterer.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\n        if (map) {\n          const clusterer = this._createClusterer();\n          this._clusterer = clusterer;\n\n          map.geoObjects.add(clusterer);\n          this._eventManager.setTarget(clusterer);\n          this._watchForContentChanges(clusterer);\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: clusterer }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._eventManager.destroy();\n    this._sub.unsubscribe();\n  }\n\n  /**\n   * Creates Clusterer.\n   */\n  private _createClusterer(): ymaps.Clusterer {\n    return new ymaps.Clusterer(this.options);\n  }\n\n  private _watchForContentChanges(clusterer: ymaps.Clusterer): void {\n    /**\n     * Adds new Placemarks to the clusterer on changes.\n     */\n    const currentPlacemarks = new Set<ymaps.Placemark>();\n\n    this._getInternalPlacemarks(this._placemarks.toArray()).forEach((placemark) => {\n      currentPlacemarks.add(placemark);\n      clusterer.add(placemark);\n    });\n\n    const placemarksSub = this._placemarks.changes.subscribe(\n      (placemarkDirectives: YaPlacemarkDirective[]) => {\n        const newPlacemarks = new Set<ymaps.Placemark>(\n          this._getInternalPlacemarks(placemarkDirectives),\n        );\n\n        const difference = this._getDifference<ymaps.Placemark>(newPlacemarks, currentPlacemarks);\n\n        clusterer.add(difference.toAdd);\n        clusterer.remove(difference.toRemove);\n      },\n    );\n\n    this._sub.add(placemarksSub);\n\n    /**\n     * Adds new GeoObjects to the clusterer on changes.\n     */\n    const currentGeoObjects = new Set<ymaps.GeoObject>();\n\n    this._getInternalGeoObjects(this._geoObjects.toArray()).forEach((geoObject) => {\n      currentGeoObjects.add(geoObject);\n      clusterer.add(geoObject);\n    });\n\n    const geoObjectsSub = this._geoObjects.changes.subscribe(\n      (geoObjectDirectives: YaGeoObjectDirective[]) => {\n        const newGeoObjects = new Set<ymaps.GeoObject>(\n          this._getInternalGeoObjects(geoObjectDirectives),\n        );\n\n        const difference = this._getDifference<ymaps.GeoObject>(newGeoObjects, currentGeoObjects);\n\n        clusterer.add(difference.toAdd);\n        clusterer.remove(difference.toRemove);\n      },\n    );\n\n    this._sub.add(geoObjectsSub);\n  }\n\n  /**\n   * Determines what should be added/removed in current set to equal new set\n   *\n   * @param newSet\n   * @param currentSet\n   */\n  private _getDifference<T>(newSet: Set<T>, currentSet: Set<T>) {\n    const toAdd: T[] = [];\n    const toRemove: T[] = [];\n\n    newSet.forEach((component) => {\n      if (!currentSet.has(component)) {\n        toAdd.push(component);\n        currentSet.add(component);\n      }\n    });\n\n    currentSet.forEach((component) => {\n      if (!newSet.has(component)) {\n        toRemove.push(component);\n        currentSet.delete(component);\n      }\n    });\n\n    return {\n      toAdd,\n      toRemove,\n    };\n  }\n\n  private _getInternalPlacemarks(placemarks: YaPlacemarkDirective[]): ymaps.Placemark[] {\n    return placemarks\n      .filter((component) => !!component.placemark)\n      .map((component) => component.placemark!);\n  }\n\n  private _getInternalGeoObjects(geoObjects: YaGeoObjectDirective[]): ymaps.GeoObject[] {\n    return geoObjects\n      .filter((component) => !!component.geoObject)\n      .map((component) => component.geoObject!);\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { YaMapComponent } from '../ya-map/ya-map.component';\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\n\n/**\n * Control types.\n */\nexport type YaControlType =\n  | 'Button'\n  | 'FullscreenControl'\n  | 'GeolocationControl'\n  | 'ListBox'\n  | 'ListBoxItem'\n  | 'RouteButton'\n  | 'RouteEditor'\n  | 'RoutePanel'\n  | 'RulerControl'\n  | 'SearchControl'\n  | 'TrafficControl'\n  | 'TypeSelector'\n  | 'ZoomControl';\n\n/**\n * The `ya-control` component wraps `ymaps.control[YaControlType]` classes from the Yandex.Maps API.\n * You can configure `ymaps.control[YaControlType]` via the component's inputs.\n * API Events can be bound only manually. You can use `ready` event to get an instance.\n *\n * <example-url>https://stackblitz.com/edit/searchcontrol?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-control\n *     type=\"RoutePanel\"\n *     [parameters]=\"{ options: { float: 'right' } }\"\n *   ></ya-control>\n * </ya-map>\n * ```\n */\n@Directive({\n  selector: 'ya-control',\n})\nexport class YaControlDirective implements OnInit, OnChanges, OnDestroy {\n  private readonly _sub = new Subscription();\n\n  private _control?: any;\n\n  /**\n   * Control type.\n   */\n  @Input() type: YaControlType;\n\n  /**\n   * Parameters for the Control.\n   */\n  @Input() parameters: any;\n\n  /**\n   * Control instance is added in a Map.\n   */\n  @Output() ready: EventEmitter<YaReadyEvent<any>> = new EventEmitter<YaReadyEvent<any>>();\n\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\n\n  ngOnChanges(): void {\n    if (this._control) {\n      console.warn(\n        'Control does not support dynamic configuration. You can config it manually using ymaps or recreate the component with new configuration',\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\n        if (map) {\n          const control = new ymaps.control[this.type](this.parameters);\n          this._control = control;\n\n          /**\n           * RoutePanel ignores state in parameters. API bug\n           */\n          if (\n            control instanceof ymaps.control.RoutePanel &&\n            this.parameters &&\n            this.parameters.state\n          ) {\n            control.routePanel.state.set({ ...this.parameters.state });\n          }\n\n          map.controls.add(control);\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: control }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._control) {\n      this._yaMapComponent?.map$.value?.controls.remove(this._control);\n    }\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { EventManager } from '../../event-manager';\nimport { YaMapComponent } from '../ya-map/ya-map.component';\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\nimport { YaEvent } from '../../typings/ya-event';\n\n/**\n * @internal\n */\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\n/**\n * The `ya-multiroute` component wraps `ymaps.multiRouter.MultiRoute` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/multiroute-pedestrian?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map [center]=\"[55.761952, 37.620739]\">\n *   <ya-multiroute\n *     [referencePoints]=\"[[55.751952, 37.600739], 'Красные ворота, Москва']\"\n *     [model]=\"{ params: { routingMode: 'pedestrian' } }\"\n *   ></ya-multiroute>\n * </ya-map>\n * ```\n */\n@Directive({\n  selector: 'ya-multiroute',\n})\nexport class YaMultirouteDirective implements OnInit, OnChanges, OnDestroy {\n  private readonly _sub = new Subscription();\n\n  private readonly _eventManager = new EventManager(this._ngZone);\n\n  private _multiroute?: ymaps.multiRouter.MultiRoute;\n\n  /**\n   * Reference points for the multiroute.\n   * Shorthand for [model]=\"{ referencePoints: [0, 0] }\".\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IMultiRouteReferencePoint.html}\n   */\n  @Input() referencePoints: ymaps.IMultiRouteReferencePoint[];\n\n  /**\n   * Model description object of a multiroute.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IMultiRouteModelJson.html}\n   */\n  @Input() model:\n    | ymaps.multiRouter.MultiRouteModel\n    | Optional<ymaps.IMultiRouteModelJson, 'referencePoints'>;\n\n  /**\n   * Options for the multiroute.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/multiRouter.MultiRoute.html#multiRouter.MultiRoute__param-options}\n   */\n  @Input() options: ymaps.multiRouter.IMultiRouteOptions;\n\n  /**\n   * Multiroute instance is added in a Map.\n   */\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.multiRouter.MultiRoute>> = new EventEmitter<\n    YaReadyEvent<ymaps.multiRouter.MultiRoute>\n  >();\n\n  /**\n   * Change to the active route.\n   */\n  @Output() activeroutechange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('activeroutechange');\n\n  /**\n   * Closing the balloon.\n   */\n  @Output() balloonclose: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('balloonclose');\n\n  /**\n   * Opening a balloon on a map.\n   */\n  @Output() balloonopen: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('balloonopen');\n\n  /**\n   * The event occurs at the time of setting the map center and its zoom level for optimal display of the multi-route.\n   */\n  @Output() boundsautoapply: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('boundsautoapply');\n\n  /**\n   * Changing coordinates of the geographical area covering the multi-route.\n   */\n  @Output() boundschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('boundschange');\n\n  /**\n   * Single left-click on the object.\n   */\n  @Output() yaclick: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('click');\n\n  /**\n   * Calls the element's context menu.\n   */\n  @Output() yacontextmenu: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('contextmenu');\n\n  /**\n   * Double left-click on the object.\n   */\n  @Output() yadblclick: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('dblclick');\n\n  /**\n   * Change to the geo object geometry.\n   */\n  @Output() geometrychange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('geometrychange');\n\n  /**\n   * Map reference changed.\n   */\n  @Output() mapchange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('mapchange');\n\n  /**\n   * Pressing the mouse button over the object.\n   */\n  @Output() yamousedown: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('mousedown');\n\n  /**\n   * Pointing the cursor at the object.\n   */\n  @Output() yamouseenter: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('mouseenter');\n\n  /**\n   * Moving the cursor off of the object.\n   */\n  @Output() yamouseleave: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('mouseleave');\n\n  /**\n   * Moving the cursor over the object.\n   */\n  @Output() yamousemove: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('mousemove');\n\n  /**\n   * Letting go of the mouse button over an object.\n   */\n  @Output() yamouseup: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('mouseup');\n\n  /**\n   * End of multitouch.\n   */\n  @Output() multitouchend: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('multitouchend');\n\n  /**\n   * Repeating event during multitouch.\n   */\n  @Output() multitouchmove: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('multitouchmove');\n\n  /**\n   * Start of multitouch.\n   */\n  @Output() multitouchstart: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('multitouchstart');\n\n  /**\n   * Change to the object options.\n   */\n  @Output() optionschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('optionschange');\n\n  /**\n   * Change to the geo object overlay.\n   */\n  @Output() overlaychange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('overlaychange');\n\n  /**\n   * The parent object reference changed.\n   */\n  @Output() parentchange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('parentchange');\n\n  /**\n   * Changing pixel coordinates of the area covering the multi-route.\n   */\n  @Output() pixelboundschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('pixelboundschange');\n\n  /**\n   * Change to the geo object data.\n   */\n  @Output() propertieschange: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('propertieschange');\n\n  /**\n   * Updating the multi-route.\n   */\n  @Output() update: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('update');\n\n  /**\n   * Mouse wheel scrolling.\n   */\n  @Output() yawheel: Observable<YaEvent<ymaps.multiRouter.MultiRoute>> =\n    this._eventManager.getLazyEmitter('wheel');\n\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\n\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    const multiroute = this._multiroute;\n\n    if (multiroute) {\n      const { referencePoints, model, options } = changes;\n\n      if (model) {\n        this._setModel(model.currentValue, multiroute);\n      }\n\n      if (referencePoints) {\n        multiroute.model.setReferencePoints(referencePoints.currentValue);\n      }\n\n      if (options) {\n        multiroute.options.set(options.currentValue);\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    if (this._yaMapComponent.isBrowser) {\n      const sub = this._yaMapComponent.map$.subscribe((map) => {\n        if (map) {\n          const multiroute = this._createMultiroute();\n          this._multiroute = multiroute;\n\n          map.geoObjects.add(multiroute);\n          this._eventManager.setTarget(multiroute);\n          this._ngZone.run(() => this.ready.emit({ ymaps, target: multiroute }));\n        }\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._multiroute) {\n      this._yaMapComponent?.map$.value?.geoObjects.remove(this._multiroute);\n      this._eventManager.destroy();\n    }\n\n    this._sub.unsubscribe();\n  }\n\n  /**\n   * Destructs state and passes them in API.\n   * @param model\n   * @param multiroute\n   */\n  private _setModel(\n    model: ymaps.IMultiRouteModelJson,\n    multiroute: ymaps.multiRouter.MultiRoute,\n  ): void {\n    const { referencePoints, params } = model;\n\n    if (referencePoints) {\n      multiroute.model.setReferencePoints(referencePoints);\n    }\n\n    if (params) {\n      multiroute.model.setParams(params);\n    }\n  }\n\n  /**\n   * Creates Multiroute.\n   */\n  private _createMultiroute(): ymaps.multiRouter.MultiRoute {\n    return new ymaps.multiRouter.MultiRoute(this._combineModel(), this.options);\n  }\n\n  /**\n   * Combines the model and reference points into single object\n   */\n  private _combineModel(): ymaps.IMultiRouteModelJson {\n    const model = (this.model || {}) as ymaps.IMultiRouteModelJson;\n\n    return {\n      ...model,\n      referencePoints: this.referencePoints || model.referencePoints,\n    };\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { from, Observable, Subscription } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { EventManager } from '../../event-manager';\nimport { YaMapComponent } from '../ya-map/ya-map.component';\nimport { YaReadyEvent } from '../../typings/ya-ready-event';\nimport { YaEvent } from '../../typings/ya-event';\n\n/**\n * The `ya-panorama` component wraps `ymaps.panorama.Player` class from the Yandex.Maps API.\n * You can configure it via the component's inputs.\n * Events can be bound using the outputs of the component.\n *\n * <example-url>https://stackblitz.com/edit/panorama?embed=1</example-url>\n *\n * @example\n * ```html\n * <ya-map>\n *   <ya-panorama [point]=\"[59.938557, 30.316198]\" layer=\"yandex#airPanorama\"></ya-panorama>\n * </ya-map>\n * ```\n */\n@Directive({\n  selector: 'ya-panorama',\n})\nexport class YaPanoramaDirective implements OnInit, OnChanges, OnDestroy {\n  private readonly _sub = new Subscription();\n\n  private readonly _eventManager = new EventManager(this._ngZone);\n\n  private _player?: ymaps.panorama.Player;\n\n  /**\n   * The point for searching for nearby panoramas.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.locate.html#panorama.locate__param-point}\n   */\n  @Input() point: number[];\n\n  /**\n   * The layer to search for panoramas.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.locate.html#panorama.locate__param-options.layer}\n   */\n  @Input() layer: ymaps.panorama.Layer;\n\n  /**\n   * Options for the player.\n   * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/panorama.Player.html#panorama.Player__param-options}\n   */\n  @Input() options: ymaps.panorama.IPlayerOptions;\n\n  /**\n   * Panorama instance is created.\n   */\n  @Output() ready: EventEmitter<YaReadyEvent<ymaps.panorama.Player>> = new EventEmitter<\n    YaReadyEvent<ymaps.panorama.Player>\n  >();\n\n  /**\n   * The player was closed by the user or destroyed using the panorama.Player.destroy method.\n   */\n  @Output() destroy: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('destroy');\n\n  /**\n   * The view direction changed.\n   */\n  @Output() directionchange: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('directionchange');\n\n  /**\n   * An error occurred during operation of the player. The user will be shown the appropriate screen.\n   */\n  @Output() yaerror: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('error');\n\n  /**\n   * The panorama player switched to full-screen mode.\n   */\n  @Output() fullscreenenter: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('fullscreenenter');\n\n  /**\n   * The panorama player exited full-screen mode.\n   */\n  @Output() fullscreenexit: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('fullscreenexit');\n\n  /**\n   * The user clicked on an expanded marker.\n   */\n  @Output() markercollapse: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('markercollapse');\n\n  /**\n   * The user clicked on a collapsed marker.\n   */\n  @Output() markerexpand: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('markerexpand');\n\n  /**\n   * The user's cursor hovered over a marker.\n   */\n  @Output() markermouseenter: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('markermouseenter');\n\n  /**\n   * The user's cursor left a marker.\n   */\n  @Output() markermouseleave: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('markermouseleave');\n\n  /**\n   * The open panorama changed.\n   */\n  @Output() panoramachange: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('panoramachange');\n\n  /**\n   * The size of the viewport has been changed.\n   */\n  @Output() spanchange: Observable<YaEvent<ymaps.panorama.Player>> =\n    this._eventManager.getLazyEmitter('spanchange');\n\n  constructor(private readonly _ngZone: NgZone, private readonly _yaMapComponent: YaMapComponent) {}\n\n  /**\n   * Handles input changes and passes them in API.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    const player = this._player;\n\n    if (player) {\n      const { point, layer, options } = changes;\n\n      /**\n       * player.moveTo resets values to default if any of them isn't passed.\n       * That's why we use value from currentValue OR previous value from input.\n       * With that logic it's possible to pass only point, layer or options.\n       */\n      if (point || layer) {\n        const combinedPoint: number[] = point?.currentValue || this.point;\n        const combinedLayer: ymaps.panorama.Layer = layer?.currentValue || this.layer;\n\n        player.moveTo(combinedPoint, { layer: combinedLayer });\n      }\n\n      if (options) {\n        this._setOptions(options.currentValue, player);\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    if (this._yaMapComponent.isBrowser) {\n      const panorama$ = this._yaMapComponent.map$.pipe(\n        filter((m): m is ymaps.Map => Boolean(m)),\n        switchMap((m: ymaps.Map) => {\n          /**\n           * Map and panorama use the same container, so need to destroy/remove map\n           */\n          m.destroy();\n          return this._createPanorama();\n        }),\n      );\n\n      const sub = panorama$.subscribe((panorama) => {\n        const { id } = this._yaMapComponent.container.nativeElement;\n        const player = new ymaps.panorama.Player(id, panorama, this.options);\n        this._player = player;\n\n        this._eventManager.setTarget(player);\n        this._ngZone.run(() => this.ready.emit({ ymaps, target: player }));\n      });\n\n      this._sub.add(sub);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._eventManager.destroy();\n    this._sub.unsubscribe();\n  }\n\n  /**\n   * Destructs state and passes it in API.\n   * @param options\n   * @param player\n   */\n  private _setOptions(options: ymaps.panorama.IPlayerOptions, player: ymaps.panorama.Player): void {\n    const {\n      autoFitToViewport,\n      controls,\n      direction,\n      hotkeysEnabled,\n      span,\n      scrollZoomBehavior,\n      suppressMapOpenBlock,\n    } = options;\n\n    if (\n      autoFitToViewport ||\n      controls ||\n      hotkeysEnabled ||\n      scrollZoomBehavior ||\n      suppressMapOpenBlock\n    ) {\n      console.warn(\n        'Only direction and span can be set after entity init. To set other options, you should recreate a Panorama with new options',\n      );\n    }\n\n    if (direction) {\n      player.setDirection(direction);\n    }\n\n    if (span) {\n      player.setSpan(span);\n    }\n  }\n\n  /**\n   * Searches for a panorama and returns first\n   */\n  private _createPanorama(): Observable<ymaps.IPanorama> {\n    return from(ymaps.panorama.locate(this.point, { layer: this.layer })).pipe(\n      map((panoramas) => panoramas[0]),\n    );\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { YA_CONFIG, YaConfig } from './services/ya-api-loader/ya-api-loader.service';\n\nimport { YaClustererComponent } from './components/ya-clusterer/ya-clusterer.component';\nimport { YaControlDirective } from './components/ya-control/ya-control.directive';\nimport { YaGeoObjectDirective } from './components/ya-geoobject/ya-geoobject.directive';\nimport { YaMapComponent } from './components/ya-map/ya-map.component';\nimport { YaMultirouteDirective } from './components/ya-multiroute/ya-multiroute.directive';\nimport { YaPanoramaDirective } from './components/ya-panorama/ya-panorama.directive';\nimport { YaPlacemarkDirective } from './components/ya-placemark/ya-placemark.directive';\n\n@NgModule({\n  declarations: [\n    YaClustererComponent,\n    YaControlDirective,\n    YaGeoObjectDirective,\n    YaMapComponent,\n    YaMultirouteDirective,\n    YaPanoramaDirective,\n    YaPlacemarkDirective,\n  ],\n  exports: [\n    YaClustererComponent,\n    YaControlDirective,\n    YaGeoObjectDirective,\n    YaMapComponent,\n    YaMultirouteDirective,\n    YaPanoramaDirective,\n    YaPlacemarkDirective,\n  ],\n})\nexport class AngularYandexMapsModule {\n  /**\n   * Please use this method when you register the module at the root level\n   * @param config\n   */\n  static forRoot(config: YaConfig): ModuleWithProviders<AngularYandexMapsModule> {\n    return {\n      ngModule: AngularYandexMapsModule,\n      providers: [{ provide: YA_CONFIG, useValue: config }],\n    };\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { from, Observable } from 'rxjs';\nimport { YaApiLoaderService } from '../ya-api-loader/ya-api-loader.service';\n\n/**\n * The `YaGeocoder` service wraps `ymaps.geocode` static function from the Yandex.Maps API.\n *\n * @example\n * ```ts\n * import { YaGeocoderService } from 'angular8-yandex-maps';\n *\n * export class AppComponent {\n *   constructor(private yaGeocoderService: YaGeocoderService) {\n *     this.yaGeocoderService.geocode('Moscow')\n *       .subscribe(v => console.log(v))\n *   }\n * }\n * ```\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class YaGeocoderService {\n  constructor(\n    private readonly _ngZone: NgZone,\n    private readonly _yaApiLoaderService: YaApiLoaderService,\n  ) {}\n\n  /**\n   * Processes geocoding requests.\n   * @param request The address for which coordinates need to be obtained (forward geocoding), or the coordinates for which the address needs to be determined (reverse geocoding).\n   * @param options Options.\n   */\n  geocode(request: string | number[], options?: ymaps.IGeocodeOptions): Observable<object> {\n    return this._yaApiLoaderService.load().pipe(\n      switchMap(() => from(ymaps.geocode(request, options))),\n      switchMap(\n        (result) =>\n          new Observable<object>((observer) => {\n            this._ngZone.run(() => {\n              observer.next(result);\n              observer.complete();\n            });\n          }),\n      ),\n    );\n  }\n}\n","/*\n * Public API Surface of angular8-yandex-maps\n */\n\n// Typings\nimport './lib/typings/yandex-maps/index';\n\n// Module\nexport * from './lib/angular-yandex-maps.module';\n\n// Services\nexport * from './lib/services/ya-api-loader/ya-api-loader.service';\nexport * from './lib/services/ya-geocoder/ya-geocoder.service';\n\n// Interfaces\nexport * from './lib/typings/ya-event';\nexport * from './lib/typings/ya-ready-event';\n\n// Components\nexport * from './lib/components/ya-clusterer/ya-clusterer.component';\nexport * from './lib/components/ya-control/ya-control.directive';\nexport * from './lib/components/ya-geoobject/ya-geoobject.directive';\nexport * from './lib/components/ya-map/ya-map.component';\nexport * from './lib/components/ya-multiroute/ya-multiroute.directive';\nexport * from './lib/components/ya-panorama/ya-panorama.directive';\nexport * from './lib/components/ya-placemark/ya-placemark.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}