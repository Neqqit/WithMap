import { NgModule } from '@angular/core';
import { YA_CONFIG } from './services/ya-api-loader/ya-api-loader.service';
import { YaClustererComponent } from './components/ya-clusterer/ya-clusterer.component';
import { YaControlDirective } from './components/ya-control/ya-control.directive';
import { YaGeoObjectDirective } from './components/ya-geoobject/ya-geoobject.directive';
import { YaMapComponent } from './components/ya-map/ya-map.component';
import { YaMultirouteDirective } from './components/ya-multiroute/ya-multiroute.directive';
import { YaPanoramaDirective } from './components/ya-panorama/ya-panorama.directive';
import { YaPlacemarkDirective } from './components/ya-placemark/ya-placemark.directive';
import * as i0 from "@angular/core";
export class AngularYandexMapsModule {
    /**
     * Please use this method when you register the module at the root level
     * @param config
     */
    static forRoot(config) {
        return {
            ngModule: AngularYandexMapsModule,
            providers: [{ provide: YA_CONFIG, useValue: config }],
        };
    }
}
AngularYandexMapsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: AngularYandexMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AngularYandexMapsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: AngularYandexMapsModule, declarations: [YaClustererComponent,
        YaControlDirective,
        YaGeoObjectDirective,
        YaMapComponent,
        YaMultirouteDirective,
        YaPanoramaDirective,
        YaPlacemarkDirective], exports: [YaClustererComponent,
        YaControlDirective,
        YaGeoObjectDirective,
        YaMapComponent,
        YaMultirouteDirective,
        YaPanoramaDirective,
        YaPlacemarkDirective] });
AngularYandexMapsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: AngularYandexMapsModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: AngularYandexMapsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        YaClustererComponent,
                        YaControlDirective,
                        YaGeoObjectDirective,
                        YaMapComponent,
                        YaMultirouteDirective,
                        YaPanoramaDirective,
                        YaPlacemarkDirective,
                    ],
                    exports: [
                        YaClustererComponent,
                        YaControlDirective,
                        YaGeoObjectDirective,
                        YaMapComponent,
                        YaMultirouteDirective,
                        YaPanoramaDirective,
                        YaPlacemarkDirective,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci15YW5kZXgtbWFwcy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyOC15YW5kZXgtbWFwcy9zcmMvbGliL2FuZ3VsYXIteWFuZGV4LW1hcHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSxTQUFTLEVBQVksTUFBTSxnREFBZ0QsQ0FBQztBQUVyRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN4RixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN4RixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDM0YsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFDckYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0RBQWtELENBQUM7O0FBc0J4RixNQUFNLE9BQU8sdUJBQXVCO0lBQ2xDOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBZ0I7UUFDN0IsT0FBTztZQUNMLFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FBQztTQUN0RCxDQUFDO0lBQ0osQ0FBQzs7b0hBVlUsdUJBQXVCO3FIQUF2Qix1QkFBdUIsaUJBbEJoQyxvQkFBb0I7UUFDcEIsa0JBQWtCO1FBQ2xCLG9CQUFvQjtRQUNwQixjQUFjO1FBQ2QscUJBQXFCO1FBQ3JCLG1CQUFtQjtRQUNuQixvQkFBb0IsYUFHcEIsb0JBQW9CO1FBQ3BCLGtCQUFrQjtRQUNsQixvQkFBb0I7UUFDcEIsY0FBYztRQUNkLHFCQUFxQjtRQUNyQixtQkFBbUI7UUFDbkIsb0JBQW9CO3FIQUdYLHVCQUF1QjsyRkFBdkIsdUJBQXVCO2tCQXBCbkMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osb0JBQW9CO3dCQUNwQixrQkFBa0I7d0JBQ2xCLG9CQUFvQjt3QkFDcEIsY0FBYzt3QkFDZCxxQkFBcUI7d0JBQ3JCLG1CQUFtQjt3QkFDbkIsb0JBQW9CO3FCQUNyQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1Asb0JBQW9CO3dCQUNwQixrQkFBa0I7d0JBQ2xCLG9CQUFvQjt3QkFDcEIsY0FBYzt3QkFDZCxxQkFBcUI7d0JBQ3JCLG1CQUFtQjt3QkFDbkIsb0JBQW9CO3FCQUNyQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFlBX0NPTkZJRywgWWFDb25maWcgfSBmcm9tICcuL3NlcnZpY2VzL3lhLWFwaS1sb2FkZXIveWEtYXBpLWxvYWRlci5zZXJ2aWNlJztcblxuaW1wb3J0IHsgWWFDbHVzdGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMveWEtY2x1c3RlcmVyL3lhLWNsdXN0ZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgWWFDb250cm9sRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3lhLWNvbnRyb2wveWEtY29udHJvbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgWWFHZW9PYmplY3REaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMveWEtZ2Vvb2JqZWN0L3lhLWdlb29iamVjdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgWWFNYXBDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMveWEtbWFwL3lhLW1hcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgWWFNdWx0aXJvdXRlRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3lhLW11bHRpcm91dGUveWEtbXVsdGlyb3V0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgWWFQYW5vcmFtYURpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy95YS1wYW5vcmFtYS95YS1wYW5vcmFtYS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgWWFQbGFjZW1hcmtEaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMveWEtcGxhY2VtYXJrL3lhLXBsYWNlbWFyay5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBZYUNsdXN0ZXJlckNvbXBvbmVudCxcbiAgICBZYUNvbnRyb2xEaXJlY3RpdmUsXG4gICAgWWFHZW9PYmplY3REaXJlY3RpdmUsXG4gICAgWWFNYXBDb21wb25lbnQsXG4gICAgWWFNdWx0aXJvdXRlRGlyZWN0aXZlLFxuICAgIFlhUGFub3JhbWFEaXJlY3RpdmUsXG4gICAgWWFQbGFjZW1hcmtEaXJlY3RpdmUsXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBZYUNsdXN0ZXJlckNvbXBvbmVudCxcbiAgICBZYUNvbnRyb2xEaXJlY3RpdmUsXG4gICAgWWFHZW9PYmplY3REaXJlY3RpdmUsXG4gICAgWWFNYXBDb21wb25lbnQsXG4gICAgWWFNdWx0aXJvdXRlRGlyZWN0aXZlLFxuICAgIFlhUGFub3JhbWFEaXJlY3RpdmUsXG4gICAgWWFQbGFjZW1hcmtEaXJlY3RpdmUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJZYW5kZXhNYXBzTW9kdWxlIHtcbiAgLyoqXG4gICAqIFBsZWFzZSB1c2UgdGhpcyBtZXRob2Qgd2hlbiB5b3UgcmVnaXN0ZXIgdGhlIG1vZHVsZSBhdCB0aGUgcm9vdCBsZXZlbFxuICAgKiBAcGFyYW0gY29uZmlnXG4gICAqL1xuICBzdGF0aWMgZm9yUm9vdChjb25maWc6IFlhQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxBbmd1bGFyWWFuZGV4TWFwc01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQW5ndWxhcllhbmRleE1hcHNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IFlBX0NPTkZJRywgdXNlVmFsdWU6IGNvbmZpZyB9XSxcbiAgICB9O1xuICB9XG59XG4iXX0=